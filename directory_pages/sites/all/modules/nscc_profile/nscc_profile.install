<?php
// $Id: profile.install,v 1.12.2.1 2009/01/06 15:46:37 goba Exp $

/**
 * Implementation of hook_install().
 */
function nscc_profile_install() {
  // Create tables.
  drupal_install_schema('nscc_profile');
}

/**
 * Implementation of hook_uninstall().
 */
function nscc_profile_uninstall() {
  // Remove tables
  drupal_uninstall_schema('nscc_profile');

  variable_del('nscc_profile_block_author_fields');
}

/**
 * Implementation of hook_schema().
 */
function nscc_profile_schema() {

  $schema['nscc_profile_fields'] = array(
    'description' => 'Stores profile field information.',
    'fields' => array(
      'fid' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique profile field ID.',
      ),
      'title' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'description' => 'Title of the field shown to the end user.',
      ),
      'name' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Internal name of the field used in the form HTML and URLs.',
      ),
      'explanation' => array(
        'type' => 'text',
        'not null' => FALSE,
        'description' => 'Explanation of the field to end users.',
      ),
      'category' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'description' => 'Profile category that the field will be grouped under.',
      ),
      'page' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'description' => "Title of page used for browsing by the field's value",
      ),
      'type' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => FALSE,
        'description' => 'Type of form field.',
      ),
      'weight' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
        'description' => 'Weight of field in relation to other profile fields.',
      ),
      'required' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
        'description' => 'Whether the user is required to enter a value. (0 = no, 1 = yes)',
      ),
      'register' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
        'description' => 'Whether the field is visible in the user registration form. (1 = yes, 0 = no)',
      ),
      'visibility' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
        'description' => 'The level of visibility for the field. (0 = hidden, 1 = private, 2 = public on profile but not member list pages, 3 = public on profile and list pages)',
      ),
      'autocomplete' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
        'description' => 'Whether form auto-completion is enabled. (0 = disabled, 1 = enabled)',
      ),
      'options' => array(
        'type' => 'text',
        'not null' => FALSE,
        'description' => 'List of options to be used in a list selection field.',
      ),
    ),
    'indexes' => array('category' => array('category')),
    'unique keys' => array('name' => array('name')),
    'primary key' => array('fid'),
  );

  $schema['nscc_profile_values'] = array(
    'description' => 'Stores values for profile fields.',
    'fields' => array(
      'fid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The {nscc_profile_fields}.fid of the field.',
      ),
      'uid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The {users}.uid of the profile user.',
      ),
      'value' => array(
        'type' => 'text',
        'not null' => FALSE,
        'description' => 'The value for the field.',
      ),
    ),
    'primary key' => array('uid', 'fid'),
    'indexes' => array(
      'fid' => array('fid'),
    ),
  );

	$schema['nscc_profile_edfund_rec_requests'] = array(
		'description' => 'Stores number of requests sent by user',
		'fields' => array(
      'rid' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique request ID.',
      ),
      'uid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The {users}.uid of the requesting user.',
      ),
      'requested_uid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The {users}.uid of the user from whom the request is being made.',
      ),
			'requested' => array(	'type' => 'int',
					'unsigned' => TRUE,
					'not null' => TRUE,
					'default' => 0,
					'description' => 'Unix timestamp for when the request was sent',
			),
		),
		'primary key'=> array('rid'),
		'indexes' => array(
			'rid'=>array('rid'),
			'uid'=>array('uid'),
			'requested'=>array('requested'),
		),
	);
  return $schema;
}
/*

The following view is required for the a-z listing index,
but drupal's db layer can't handle views. So to install, copy/paste and assign permissions.
This assumes that there are 10 entries per page

create or replace view people_nscc_profile_az_index 
as
(
	select
		tui1.initial AS initial,
		CASE WHEN sum(tui2.entries) IS NULL THEN 1
			 ELSE floor(sum(tui2.entries)/10)
		END as running_count
	from 
		(
		  select 
		  	upper(substring(value from 1 for 1)) as initial,
		  	count(value) as entries 
		  from 
		  	people_nscc_profile_values 
		  where fid=24 and not value='' and value IS not NULL 
		  group by initial 
		  order by initial
		)as tui1 
		left join 
		(
		  select 
		  	upper(substring(value from 1 for 1)) as initial,
		  	count(value) as entries 
		  from 
		  	people_nscc_profile_values 
		  where fid=24 and not value='' and value IS not NULL 
		  group by initial 
		  order by initial
		)as tui2 
		on tui2.initial < tui1.initial 
	group by tui1.initial 
	order by tui1.initial
);
grant select on people_nscc_profile_az_index to public;

select * from people_nscc_profile_az_index;


*/
