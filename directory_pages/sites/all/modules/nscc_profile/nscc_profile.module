
<?php
// $Id: nscc_profile.module,v 1.236.2.3 2009/01/12 10:09:19 goba Exp $

/**
 * @file
 * Support for configurable nscc user profiles.
 */

/**
 * Private field, content only available to privileged users.
 */
define('PROFILE_PRIVATE', 1);

/**
 * Public field, content shown on profile page but not used on member list pages.
 */
define('PROFILE_PUBLIC', 2);

/**
 * Public field, content shown on profile page and on member list pages.
 */
define('PROFILE_PUBLIC_LISTINGS', 3);

/**
 * Hidden profile field, only accessible by administrators, modules and themes.
 */
define('PROFILE_HIDDEN', 4);

/**
 * Implementation of hook_help().
 */
function nscc_profile_help($path, $arg) {
  switch ($path) {
    case 'admin/help#nscc_profile':
      $output = '<p>'. t('The profile module allows custom fields (such as country, full name, or age) to be defined and displayed in the <em>My Account</em> section. This permits users of a site to share more information about themselves, and can help community-based sites organize users around specific information.') .'</p>';
      $output .= '<p>'. t('The following types of fields can be added to a user profile:') .'</p>';
      $output .= '<ul><li>'. t('single-line textfield') .'</li>';
      $output .= '<li>'. t('multi-line textfield') .'</li>';
      $output .= '<li>'. t('checkbox') .'</li>';
      $output .= '<li>'. t('list selection') .'</li>';
      $output .= '<li>'. t('freeform list') .'</li>';
      $output .= '<li>'. t('URL') .'</li>';
      $output .= '<li>'. t('date') .'</li></ul>';
      $output .= '<p>'. t('For more information, see the online handbook entry for <a href="@nscc_profile">NSCC_Profile module</a>.', array('@nscc_profile' => 'http://drupal.org/handbook/modules/profile/')) .'</p>';
      return $output;
    case 'admin/user/profile':
      return '<p>'. t("This page displays a list of the existing custom profile fields to be displayed on a user's <em>My Account</em> page. To provide structure, similar or related fields may be placed inside a category. To add a new category (or edit an existing one), edit a profile field and provide a new category name. To change the category of a field or the order of fields within a category, grab a drag-and-drop handle under the Title column and drag the field to a new location in the list. (Grab a handle by clicking and holding the mouse while hovering over a handle icon.) Remember that your changes will not be saved until you click the <em>Save configuration</em> button at the bottom of the page.") .'</p>';
  }
}
/**
 * Implementation of hook_perm().
 */
function nscc_profile_perm(){
	return array('edit other user\'s profiles','view emergency contacts','edit other user\'s emergency contacts');
}


/**
 * Implementation of hook_theme()
 */
function nscc_profile_theme() {
  return array(
    'nscc_profile_block' => array(
      'arguments' => array('account' => NULL, 'fields' => array()),
      'template' => 'nscc_profile-block',
    ),
    'nscc_profile_listing' => array(
      'arguments' => array('account' => NULL, 'fields' => array()),
      'template' => 'nscc_profile-listing',
    ),
    'nscc_profile_wrapper' => array(
      'arguments' => array('content' => NULL),
      'template' => 'nscc_profile-wrapper',
    ),
    'nscc_profile_admin_overview' => array(
      'arguments' => array('form' => NULL),
      'file' => 'nscc_profile.admin.inc',
    ),
	'nscc_social_network_link' => array(
	  'arguments'=>array('service'=>NULL,'service_username'=>NULL)
	)
  );
}

/**
 * Implementation of hook_menu().
 */
function nscc_profile_menu() {
  $items['nscc_profile'] = array(
    'title' => 'User List',
    'page callback' => 'nscc_profile_browse',
    'access arguments' => array('access user profiles'),
    'type' => MENU_SUGGESTED_ITEM,
    'file' => 'nscc_profile.pages.inc',
  );
  $items['profile'] = array(
    'title' => 'User List',
    'page callback' => 'nscc_profile_browse',
    'access arguments' => array('access user profiles'),
    'type' => MENU_SUGGESTED_ITEM,
    'file' => 'nscc_profile.pages.inc',
  );
  $items['depts'] = array(
    'title' => 'Organizational Listing',
    'page callback' => 'nscc_profile_orglist',
    'access arguments' => array('access user profiles'),
    'type' => MENU_SUGGESTED_ITEM,
    'file' => 'nscc_profile.pages.inc',
  );
/*  
  $items['item_details_update/%/%'] = array(
	'title'=>'Update Item Info',
    'title callback' => '_schedule_update_title',
	'title arguments' => array(1,2),
    'page callback' => 'nscc_profile_schedule_update',
	'page arguments' => array(1,2),
    'access callback' => '_schedule_update_access',
    'access arguments' => array(1,2),
    'type' => MENU_CALLBACK,
    'file' => 'nscc_profile.instructor_schedule.admin.inc',
  );

  $items['tools/%/item_details_update/%/%'] = array(
	'title'=>'Update Item Info',
    'title callback' => '_schedule_update_title',
	  'title arguments' => array(3,4),
    'page callback' => 'nscc_profile_schedule_update',
		'page arguments' => array(3,4),
    'access callback' => '_schedule_update_access',
    'access arguments' => array(3,4),
    'type' => MENU_CALLBACK,
    'file' => 'nscc_profile.instructor_schedule.admin.inc',
  );
*/
  
  $items['nscc_profile/usernamesearch'] = array(
    'title' => 'User List',
    'page callback' => 'nscc_profile_usernamesearch',
    'access arguments' => array('access user profiles'),
    'type' => MENU_SUGGESTED_ITEM,
    'file' => 'nscc_profile.pages.inc',
  );
  $items['profile/autocomplete'] = array(
    'title' => 'Profile autocomplete',
    'page callback' => 'nscc_profile_autocomplete',
    'access arguments' => array('access user profiles'),
    'type' => MENU_CALLBACK,
    'file' => 'nscc_profile.pages.inc',
  );
  $items['profile/usersearch_autocomplete'] = array(
    'title' => 'Profile autocomplete',
    'page callback' => 'nscc_profile_usersearch_autocomplete',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'nscc_profile.pages.inc',
  );
  $items['admin/user/profile'] = array(
    'title' => 'NSCC Profiles',
    'description' => 'Create customizable fields for your users.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('nscc_profile_admin_overview'),
    'access arguments' => array('administer users'),
    'file' => 'nscc_profile.admin.inc',
  );
  $items['admin/user/profile/add'] = array(
    'title' => 'Add field',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('nscc_profile_field_form'),
    'access arguments' => array('administer users'),
    'type' => MENU_CALLBACK,
    'file' => 'nscc_profile.admin.inc',
  );
  $items['admin/user/profile/autocomplete'] = array(
    'title' => 'Profile category autocomplete',
    'page callback' => 'nscc_profile_admin_settings_autocomplete',
    'access arguments' => array('administer users'),
    'type' => MENU_CALLBACK,
    'file' => 'nscc_profile.admin.inc',
  );
  $items['admin/user/profile/edit'] = array(
    'title' => 'Edit field',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('nscc_profile_field_form'),
    'access arguments' => array('administer users'),
    'type' => MENU_CALLBACK,
    'file' => 'nscc_profile.admin.inc',
  );
  $items['admin/user/profile/delete'] = array(
    'title' => 'Delete field',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('nscc_profile_field_delete'),
    'access arguments' => array('administer users'),
    'type' => MENU_CALLBACK,
    'file' => 'nscc_profile.admin.inc',
  );
  /*
  $items['ajax/instructor_class_schedule'] = array(
    'title' => 'Instructor Class Schedule',
    'page callback' => 'nscc_profile_instructor_class_schedule_handler',
    'access arguments' => array('access user profiles'),
    'type' => MENU_CALLBACK,
    'file' => 'nscc_profile.instructor_schedule.inc',
  );
  */
  $items['ajax/profile_popup/%'] = array(
    'title' => 'User Profile Popup',
    'page callback' => 'nscc_profile_profile_popup',
		'page arguments' => array(2),
    'access arguments' => array('access user profiles'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}
/*
function _schedule_update_title($yrq,$item){
	require_once drupal_get_path('module','nscc_profile').'/schedule_helpers.inc';
	$course_array = _get_class_details($yrq,$item);
	return 'Item Settings -- '.rtrim(_yrq_to_quarter(strtoupper($yrq))).":".$course_array['courseno'];
}

function _schedule_update_access($yrq=null,$item=null){
	global $user;
	require_once drupal_get_path('module','nscc_profile').'/schedule_helpers.inc';
	if($user->uid == 1){
		return true;
	}
	return _check_instructor_for_class($yrq,$item,$user->name);
	//return true;
}
*/

function nscc_profile_menu_alter(&$items){
	if (is_array($items['user/%user_category/edit/account'])){
		unset($items['user/%user_category/edit/account']);
	}
	if (is_array($items['user/%user_category/edit/ldapdata_user_data'])){
		unset($items['user/%user_category/edit/ldapdata_user_data']);
	}
	if (is_array($items['user/%user_category/edit/Me'])){
		$items['user/%user_category/edit/Me']['type'] = MENU_DEFAULT_LOCAL_TASK;
		$items['user/%user_category/edit']['page arguments'] = $items['user/%user_category/edit/Me']['page arguments'];
	}
}


/**
 * Implementation of hook_block().
 */
function nscc_profile_block($op = 'list', $delta = 0, $edit = array()) {

  switch($op){
  	case 'list':
    	$blocks[0]['info'] = t('Author information');
    	$blocks[0]['cache'] = BLOCK_CACHE_PER_PAGE | BLOCK_CACHE_PER_ROLE;
  		//$blocks[1] = array('info'=> t('Instructor Class Schedule'),'cache'=>BLOCK_CACHE_PER_PAGE| BLOCK_CACHE_PER_ROLE);
  		$blocks[2] = array('info'=> t('User Picture Block'),'cache'=>BLOCK_CACHE_PER_PAGE| BLOCK_CACHE_PER_ROLE);
  		$blocks[3] = array('info'=> t('User Search Block'),'cache'=>BLOCK_CACHE_PER_PAGE| BLOCK_CACHE_PER_ROLE);
  		$blocks[4] = array('info'=> t('User Header Block'),'cache'=>BLOCK_CACHE_PER_PAGE| BLOCK_CACHE_PER_ROLE);
  		$blocks[5] = array('info'=> t('User Listing Index'),'cache'=>BLOCK_CACHE_PER_PAGE| BLOCK_CACHE_PER_ROLE);
  		$blocks[6] = array('info'=> t('EdFund Scholarship Recommendation'),'cache'=>BLOCK_CACHE_PER_PAGE| BLOCK_CACHE_PER_ROLE);
    	return $blocks;
  		break;
  		
  	case 'configure':
  		switch($delta){	
  			case 0:
  				// Author info
				// Compile a list of fields to show
				$fields = array();
				$result = db_query('SELECT name, title, weight, visibility FROM {nscc_profile_fields} WHERE visibility IN (%d, %d) ORDER BY weight', PROFILE_PUBLIC, PROFILE_PUBLIC_LISTINGS);
				while ($record = db_fetch_object($result)) {
					$fields[$record->name] = check_plain($record->title);
				}
				$fields['user_profile'] = t('Link to full user profile');
				$form['nscc_profile_block_author_fields'] = array('#type' => 'checkboxes',
					'#title' => t('Profile fields to display'),
					'#default_value' => variable_get('nscc_profile_block_author_fields', array()),
					'#options' => $fields,
					'#description' => t('Select which profile fields you wish to display in the block. Only fields designated as public in the <a href="@nscc_profile-admin">profile field configuration</a> are available.', array('@nscc_profile-admin' => url('admin/user/profile'))),
				);
				return $form;
			break;

    	}//end switch delta
    	break;
  	
  	case 'save':
  		switch($delta){
  			case 0:
    			variable_set('nscc_profile_block_author_fields', $edit['nscc_profile_block_author_fields']);
				break;
  		}//end switch delta
  		break;
  	case 'view':
  		switch($delta){

			// Author info block
			case 0:
				if (user_access('access user profiles')) {
					$output = '';
					if ((arg(0) == 'node') && is_numeric(arg(1)) && (arg(2) == NULL)) {
						$node = node_load(arg(1));
						$account = user_load(array('uid' => $node->uid));
	
						if ($use_fields = variable_get('nscc_profile_block_author_fields', array())) {
							// Compile a list of fields to show.
							$fields = array();
							$result = db_query('SELECT name, title, type, visibility, weight FROM {nscc_profile_fields} WHERE visibility IN (%d, %d) ORDER BY weight', PROFILE_PUBLIC, PROFILE_PUBLIC_LISTINGS);
							while ($record = db_fetch_object($result)) {
								// Ensure that field is displayed only if it is among the defined block fields and, if it is private, the user has appropriate permissions.
								if (isset($use_fields[$record->name]) && $use_fields[$record->name]) {
									$fields[] = $record;
								} //end if
							} //end while
						} //end if
	
					   if (!empty($fields)) {
							$profile = _nscc_profile_update_user_fields($fields, $account);
							$output .= theme('nscc_profile_block', $account, $profile, TRUE);
						} //end if
	
					   if (isset($use_fields['user_profile']) && $use_fields['user_profile']) {
							$output .= '<div>'. l(t('View full user profile'), 'user/'. $account->uid) .'</div>';
						}//end if
					}//end if
	
					if ($output) {
						$block['subject'] = t('About %name', array('%name' => $account->name));
						$block['content'] = $output;
						return $block;
					}//end if
				}//end if
				break;


			// Instructor class schedule block
			/*
			case 1:
				require_once drupal_get_path('module','nscc_profile').'/nscc_profile.instructor_schedule.inc';
				drupal_add_js(drupal_get_path('module', 'nscc_profile') .'/nscc_profile.instructor_schedule.js');
				if(!$_REQUEST['class_instructor']){
					switch(arg(0)){
						case 'node':
							$target_node = node_load(arg(1));
							$instructor_id = $target_node->uid;
							break;
						case 'tools':	
							//watchdog('nscc_profile','Users is arg zero! and '.arg(1).' is arg one.');
							$target_user = user_load(array('name'=>arg(1) ) );
							$instructor_id = $target_user->uid;
							watchdog('nscc_profile','arg(0):users arg(1):'.arg(1).' target_uid:'.$target_user->uid);
							break;
						default:
							$instructor_id = arg(1);
					}

				} else {
					$instructor_id = $_REQUEST['class_instructor'];
				}
				if (!$_REQUEST['class_yrq']){
					$current_quarter = _get_current_quarter();
				} else {
					$current_quarter = $_REQUEST['class_yrq'];
				}	

				$block['content'] = '<!-- SwishCommand noindex -->' . _get_instructor_schedule_block($instructor_id,$current_quarter) . '<!-- SwishCommand index -->';
				return $block;
				break;
			*/	

			// User photo block
			case 2:
				$block['content']='';
				$image_alttext = 'Personal Photo';
				$image_url = "/sites/default/files/pictures/no-photo-available.png";
				switch(arg(0)){
					case 'blog':
					case 'user':
						$target_uid = arg(1);
						$target_user = user_load($target_uid);
					break;
					case 'tools':
						$target_user = user_load( array('name'=>arg(1) ) );						
					break;
					default:
						$node = node_load(arg(1));
						$target_uid = $node->uid;
						$target_user = user_load($target_uid);					
				}
				if ($target_user->picture){
					$image_url = "/".$target_user->picture;
				}
				$block['content'] = '<div class="picture">';
				$block['content'] .='<img src="'.$image_url.'" alt="'.$image_alttext.'" title="'.$image_alttext.'"  />';
				$block['content'] .='</div>';
				$block['content'] .='<div class="contact"><ul>'."\n";
				if($target_user->nscc_profile_phone){
					$block['content'] .="<li><span class=\"label\">Phone:</span> ".check_plain($target_user->nscc_profile_phone)."</li>\n";
				}
				if($target_user->nscc_profile_email_address){
					$block['content'] .="<li><span class=\"label\">Email:</span> ".check_plain($target_user->nscc_profile_email_address)."</li>\n";
				}
				if($target_user->nscc_profile_im_address){
					$block['content'] .="<li><span class=\"label\">IM:</span> ".check_plain($target_user->nscc_profile_im_address)."</li>\n";
				}
				if($target_user->nscc_profile_office){
					$block['content'] .="<li><span class=\"label\">Office:</span> ".check_plain($target_user->nscc_profile_office)."</li>\n";
				}
				if($target_user->nscc_profile_office_hours){
					$block['content'] .="<li><span class=\"label\">Office Hrs:</span> ".check_plain($target_user->nscc_profile_office_hours)."</li>\n";
				}
				if($target_user->nscc_profile_mailstop){
					$block['content'] .="<li><span class=\"label\">Mailstop:</span> ".check_plain($target_user->nscc_profile_mailstop)."</li>\n";
				}
				if($target_user->nscc_profile_calendar_URL){
					$block['content'] .="<li>".l('Calendar',$target_user->nscc_profile_calendar_URL)."</li>\n";
				}
				if(_has_blog($target_uid)){
					$block['content'] .="<li>".l('Blog','blogs/'.$target_user->name)."</li>\n";
				}
				if($target_user->nscc_profile_youtubename){
					//$block['content'] .="<li>".l('My YouTube Channel','http://www.youtube.com/'.$target_user->nscc_profile_youtubename)."</li>\n";
					$block['content'] .="<li>".theme('nscc_social_network_link','youtube',$target_user->nscc_profile_youtubename)."</li>\n";
				}
				if($target_user->nscc_profile_twittername){
					$block['content'] .="<li>".theme('nscc_social_network_link','twitter',$target_user->nscc_profile_twittername)."</li>\n";
				}
				if($target_user->nscc_profile_facebookname){
					$block['content'] .="<li>".theme('nscc_social_network_link','facebook',$target_user->nscc_profile_facebookname)."</li>\n";
				}
				$block['content'] .='</ul></div>'."\n";
				return $block;
				break;


			// user search block
			case 3:
				drupal_add_js(drupal_get_path('module', 'nscc_profile') .'/nscc_profile_autocomplete.js','theme');
				$block['subject'] = "People Search";
				$block['content'] = drupal_get_form('nscc_profile_form_usersearch');				
				return $block;
				break;


			// User header block
			case 4:
				$block['subject'] = "User Header";
				$block['content'] = '';
				
				switch(arg(0)){
					case 'node':
						$profile_tab_class = '';
						$blog_tab_class = ' class="active"';
						$tools_tab_class = '';
						$node = node_load(arg(1));
						$target_uid = $node->uid;
						$target_user = user_load($target_uid);
						break;
					case 'blog':
						$profile_tab_class = '';
						$blog_tab_class = ' class="active"';
						$tools_tab_class = '';
						$target_uid = arg(1);
						$target_user = user_load($target_uid);
						break;
					case 'user':
						$profile_tab_class = ' class="active"';
						$blog_tab_class = '';
						$tools_tab_class = '';
						$target_uid = arg(1);
						$target_user = user_load($target_uid);
						break;
					case 'tools':
						$profile_tab_class = '';
						$blog_tab_class = '';
						$tools_tab_class = ' class="active"';
						$target_user = user_load(array('name'=>arg(1)));
						$target_uid = $target_user->uid;
						break;	
				}
				
				$block['content'] = '<h1 class="full_name">';
				if($target_user->nscc_profile_title){
					$block['content'] .='<span class="user_title">'.check_plain($target_user->nscc_profile_title).'</span> ';
				}
				$block['content'] .= '<span class="real_name">'.check_plain($target_user->nscc_profile_first_name).' ';
				if($target_user->nscc_profile_middle_name){
					$block['content'] .= check_plain($target_user->nscc_profile_middle_name).' ';
				}
				$block['content'] .= check_plain($target_user->nscc_profile_last_name).'</span> ';
				if($target_user->nscc_profile_degrees){
					$block['content'] .='<span class="user_degrees">'.check_plain($target_user->nscc_profile_degrees).'</span>';
				}
				$block['content'] .= "</h1>\n";
				if($target_user->nscc_profile_job_title){
					$block['content'] .='<div class="job_title">'.check_plain($target_user->nscc_profile_job_title).'</div>'."\n";
				}
				//tabs
				$block['content'] .= '<div class="tabs"><ul class="clear-block tabs primary">';
				$block['content'] .= '<li'.$profile_tab_class.'>'.l('<span class="tab">Profile</span>','users/'.$target_user->name,array('html'=>true)).'</li>';
				
				global $user;
				if(_has_blog($target_uid)||$user->uid == $target_uid){
					$block['content'] .= '<li'.$blog_tab_class.'>'.l('<span class="tab">Blog</span>','blogs/'.$target_user->name,array('html'=>true)).'</li>';
				}
				if($user->uid == $target_uid || $user->uid == 1){
					$block['content'] .= '<li'.$tools_tab_class.'>'.l('<span class="tab">Tools</span>','tools/'.$target_user->name,array('html'=>true)).'</li>';
				}

				$block['content'] .='</ul></div>'."\n";
				
				return $block;
				break;


			// A-Z User listing index block
			case 5:
				$block['subject'] = "User Listing Index";
				$block['content'] = '';
				$result = db_query('select * from {nscc_profile_az_index}');

				$block['content'] = '<ul id="nscc-profile_listing-index" class="tabs primary clear-block">';
				while($initial = db_fetch_object($result)){
					if(preg_match('/[a-z]/',strtolower($initial->initial))){
						$block['content'] .= '<li>'.l('<span class="tab">'.$initial->initial.'</span>','nscc_profile',array('html'=>true,'query'=>'page='.$initial->running_count.'#letter_'.strtolower($initial->initial))).'</li>';
					}
				}
				$block['content'] .= '</ul>'."\n";
				return $block;
				break;


			// Edfund Scholarship app
			case 6:
				global $user;
				$block['subject'] = '';
				$block['content'] = '';
				/*
				if($user->uid != 1 && $user->uid != 1445 && $user->uid != 3){
					return $block;
				}
				*/
				drupal_add_js(drupal_get_path('module', 'nscc_profile') .'/nscc_profile.edfund_scholarship.js','theme');
				drupal_add_css(drupal_get_path('module', 'nscc_profile') .'/nscc_profile.css');
				$scholarship_info_statement = '<p>Our Education Fund offers merit-based scholarships, <a href="https://northseattle.edu/edfund/apply-scholarships">you can learn more here</a>.</p>';
				if(arg(0) == 'blog' || arg(0) == 'user'){
					$host_uid = arg(1);
				} else {
					$node = node_load(arg(1));
					$host_uid = $node->uid;
				}
				$host_user = user_load($host_uid);			
				if($host_user->nscc_profile_email_address){
					//watchdog('edfund_mail','<pre>'.print_r($host_user->uid,true).'</pre>');
				  //email address_provided
				  if($user->uid){
						//user logged in
						
						//if (_nscc_profile_get_edfund_request_count($user->uid)>4){
							//$block['content'] ='<!-- SwishCommand noindex --><div class="edfund-schol-rec-req"><div class="slide-out-button">Ed Fund Scholarships</div><div class="slide-out-content"><p>You\'ve already requested recommendations from the maximum number of instructors.</p></div></div><!-- SwishCommand index -->'."\n";
						//} else {
							$block['content'] ='<!-- SwishCommand noindex --><div class="edfund-schol-rec-req"><div class="slide-out-button">Ed Fund Scholarships</div><div class="slide-out-content">'.$scholarship_info_statement.'<p>As part of the application process, you\'ll need at least two faculty recommendations.</p><p>Click the button below to send an email request for a scholarship recommendation to this instructor.</p>'.drupal_get_form('nscc_profile_form_edfund_rec_req',$host_user->nscc_profile_email_address,$host_user->uid).'</div></div><!-- SwishCommand index -->'."\n";
						//}
					} else {
					  //user not logged in
						$block['content'] ='<!-- SwishCommand noindex --><div class="edfund-schol-rec-req"><div class="slide-out-button">Ed Fund Scholarships</div><div class="slide-out-content">'.$scholarship_info_statement.'<p>In order to request a recommendation, you must be logged in.</p></div></div><!-- SwishCommand index -->'."\n";
					}
				} else {
				  //no email address provided.
					$block['content'] ='<!-- SwishCommand index --><div class="edfund-schol-rec-req"><div class="slide-out-button">Ed Fund Scholarships</div><div class="slide-out-content">'.$scholarship_info_statement.'<p>This person has not set up their profile to permit recommendation requests.</p></div></div><!-- SwishCommand index -->'."\n";
				}
				//$block['content'] = '';
				return $block;
				break;
				
  		}//end switch delta
  		break;
	} //end switch op 
}



function nscc_profile_form_edfund_rec_req($trash,$target_email,$target_uid){
	global $user;
  $form['target_email'] = array(
  	'#type'=>'value',
  	'#value'=>$target_email,
  );
  $form['target_uid'] = array(
  	'#type'=>'value',
  	'#value'=>$target_uid,
  );
	$form['submit'] = array(
													'#type'=>'submit',
													'#value'=> t('Request a Recommendation'),
												);
  /*
  $form['remaining_requests'] = array(
  	'#type'=>'markup',
  	'#value'=>'<p>You have '. (5 - _nscc_profile_get_edfund_request_count($user->uid)).' remaining requests.</p>',
  );
  */
	$form['#cache'] = FALSE;
	//watchdog('efund_mail','<pre>'.print_r($form,true).'</pre>');
	return $form;
}

function nscc_profile_form_edfund_rec_req_submit($form,&$form_state){
    global $user;
		//watchdog('edfund_mail','<pre>'.print_r($form_state['values'],true).'</pre>');
		//watchdog('edfund_mail','<pre>'._nscc_profile_get_edfund_request_count($user->uid).'</pre>');
	  _nscc_profile_log_edfund_request($user->uid,$form_state['values']['target_uid']);
		drupal_mail('nscc_profile','edfund_rec_req',$form_state['values']['target_email'],language_default(),$email_params,'edfund-scholarship-request-robot@northseattle.edu');	
		$target_user = user_load($form_state['values']['target_uid']);
		drupal_set_message('Your request has been mailed to '.$target_user->nscc_profile_first_name.' '.$target_user->nscc_profile_middle_name.' '.$target_user->nscc_profile_last_name);
}

function _nscc_profile_get_edfund_request_count($uid){
	$count_sql="SELECT count(*) FROM {nscc_profile_edfund_rec_requests} WHERE uid=%d;";
	$count=db_result(db_query($count_sql,$uid));
	return $count;
}

function _nscc_profile_log_edfund_request($requestor_uid,$target_uid){
	$insert_sql = "INSERT INTO {nscc_profile_edfund_rec_requests} ( uid,requested_uid,requested ) values (%d,%d,%d);";
	return db_result(db_query($insert_sql,$requestor_uid,$target_uid,time()));
}

/*
Query to pull simple report of existing requests.
select
	u.name as student,
	u2.name as instructor,
	TIMESTAMP 'epoch' + efr.requested * INTERVAL '1 second' as requested_time 
from 
	people_nscc_profile_edfund_rec_requests efr 
	left join people_users u on efr.uid=u.uid 
	left join people_users as u2 on efr.requested_uid=u2.uid
where
	u.name !='personadmin'
	and
	u.name != u2.name
order by u.name
;		

*/

/**
 * 
 */
function nscc_profile_form_usersearch(){
	$form['search_text'] = array('#type'=>'textfield','#size'=>60,'#title'=>'','#autocomplete_path'=>'profile/usersearch_autocomplete','#description'=>t('Type in any part of the person\'s name or username'),);
	$form['submit'] = array('#type'=>'submit','#value'=> t('Find!'), );
	$form['#cache'] = FALSE;
	$form['#token'] = '1234567';
	return $form;
}

function nscc_profile_form_alter(&$form,&$form_state,$form_id){
	if ($form_id == 'nscc_profile_form_usersearch'){ 
		$form['#token'] = FALSE;
		unset($form['#token']);
		//global $user; if ($user->uid==1) drupal_set_message("Form ID: " . $form_id);
		//global $user; if ($user->uid==1) drupal_set_message('<pre>' . print_r($form, TRUE) . '</pre>');
	}
}

function nscc_profile_form_usersearch_validate($form,&$form_state){
			//form_set_error('search_text',t('No user matching that search found.'));
}

function nscc_profile_form_usersearch_submit($form,&$form_state){
	$name = $form_state['values']['search_text'];
	$count = db_result(db_query("SELECT count(u.uid) FROM {users} u join (select uid,value as fname from {nscc_profile_values} where fid=23) fnames using (uid) join (select uid,value as lname from {nscc_profile_values} where fid=24) lnames using (uid) WHERE LOWER(fnames.fname || ' ' || lnames.lname) like LOWER('%s') OR LOWER(lnames.lname || ', ' || fnames.fname) LIKE LOWER('%%%s%%') OR LOWER(lnames.lname || ',' || fnames.fname) LIKE LOWER('%%%s%%') OR LOWER(lnames.lname || ' ' || fnames.fname) LIKE LOWER('%%%s%%')",$name,$name,$name,$name));
	watchdog('nscc_profile',t( $count.' entries found for: '.$name.'.'));
	if($count==1){
		$uname = db_result(db_query("SELECT DISTINCT u.name as uname FROM {users} u join (select uid,value as fname from {nscc_profile_values} where fid=23) fnames using (uid) join (select uid,value as lname from {nscc_profile_values} where fid=24) lnames using (uid) WHERE LOWER(fnames.fname || ' ' || lnames.lname) like LOWER('%s') OR LOWER(lnames.lname || ', ' || fnames.fname) LIKE LOWER('%%%s%%') OR LOWER(lnames.lname || ',' || fnames.fname) LIKE LOWER('%%%s%%') OR LOWER(lnames.lname || ' ' || fnames.fname) LIKE LOWER('%%%s%%')",$name,$name,$name,$name));
		$form_state['redirect'] = 'users/'.$uname;
	} else {
	    $count = db_result(db_query("SELECT count(u.uid) as uid FROM {users} u join (select uid,value as fname from {nscc_profile_values} where fid=23) fnames using (uid) join (select uid,value as lname from {nscc_profile_values} where fid=24) lnames using (uid) WHERE LOWER(u.name) like LOWER('%%%s%%') OR LOWER(fnames.fname) like LOWER('%%%s%%') OR LOWER(lnames.lname) LIKE LOWER('%%%s%%') OR LOWER(lnames.lname || ', ' || fnames.fname) LIKE LOWER('%%%s%%') OR LOWER(lnames.lname || ',' || fnames.fname) LIKE LOWER('%%%s%%') OR LOWER(lnames.lname || ' ' || fnames.fname) LIKE LOWER('%%%s%%')", $name, $name, $name, $name, $name, $name, 0, 10));
		if($count >0){
			$form_state['redirect'] = 'nscc_profile/usernamesearch/'.$name;
		} else {
			form_set_error('search_text',t('No user matching that search found.'));
			//drupal_set_message(t( $count.' entries found for: '.$name.'.'), 'status');
		}
	}
}

/**
 * Implementation of hook_taxonomy().
 */
function nscc_profile_taxonomy($op,$type,$array=NULL){
	if($op == 'delete' && $type='term'){
		//TODO: remove references to term from nscc_profile_values
	}
}


/**
 * Implementation of hook_user().
 */
function nscc_profile_user($type, &$edit, &$user, $category = NULL) {
  switch ($type) {
    case 'load':
      //if(_is_admin_user($user)){
    		return nscc_profile_load_profile($user);
    	//}
    	break;
    case 'register':
    	return nscc_profile_form_profile($edit, $user, $category, TRUE);
    	break;
    case 'update':
      //if(_is_admin_user($user)){
	    	return nscc_profile_save_profile($edit, $user, $category);
 			//}
 			break;
    case 'after_update':
      if(_is_admin_user($user)){
	    	nscc_profile_update_schedule_lookup($edit, $user);
	    	return true;
			}
			return true;
			break;
    case 'insert':
      if(_is_admin_user($user)|| $user->uid == 1){
		      return nscc_profile_save_profile($edit, $user, $category, TRUE);
			} else {
				drupal_goto('nscc_profile/no_profile',NULL,NULL,303);
				//return false;
			}
			break;
    case 'view':
    // marc: frobble comment/uncomment stuff in here to turn on/off profile hiding
      if(_is_admin_user($user)){ 
	       return nscc_profile_view_profile($user);
			} else {
				drupal_goto('nscc_profile/no_profile',NULL,NULL,303);
			}
			break;
    case 'form':
      // and here too	
      if(!_is_admin_user($user)){
      		$edit='';
      		$category='';
					drupal_goto('nscc_profile/no_profile',NULL,NULL,303);
  				return false;
  	  }	
     // end of frobble
      if ($category == 'account' || $category == ''){
	  		return nscc_profile_form_profile($edit, $user, 'Me');  	
      }else {
      	return nscc_profile_form_profile($edit, $user, $category);
	  	}	
	  	break;
    case 'validate':
      return nscc_profile_validate_profile($edit, $category);
      break;
    case 'categories':
      return nscc_profile_categories();
      break;
    case 'delete':
      db_query('DELETE FROM {nscc_profile_values} WHERE uid = %d', $user->uid);
      break;
  }
}

function nscc_profile_update_schedule_lookup(&$edit, &$user){
	$uname = $user->name;
	db_set_active('class_schedule');
	//check to see if uname exists in schedule database
	$check_name_sql = "select count(netid_uname) from schedule.netid_name_lookup where netid_uname='%s';";
	if (db_result(db_query($check_name_sql,$uname))){
		//it does, update record
		watchdog('nscc_profile','User exists, execute update');
		$update_sql="update schedule.netid_name_lookup set fname='%s', lname='%s'  where netid_uname='%s';";
		db_query($update_sql,$user->nscc_profile_first_name,$user->nscc_profile_last_name,$user->name);
	} else {
		//it doesn't, insert record
		watchdog('nscc_profile',"User doesn\'t exist, execute insert");
		$insert_sql="insert into schedule.netid_name_lookup values ('%s','%s','%s');";
		db_query($insert_sql,$user->name,$user->nscc_profile_first_name,$user->nscc_profile_last_name);
	}
	db_set_active('default');
}


function nscc_profile_load_profile(&$user) {
  $result = db_query('SELECT f.name, f.type, v.value FROM {nscc_profile_fields} f INNER JOIN {nscc_profile_values} v ON f.fid = v.fid WHERE uid = %d', $user->uid);
  while ($field = db_fetch_object($result)) {
    if (empty($user->{$field->name})) {
      $user->{$field->name} = _nscc_profile_field_serialize($field->type) ? unserialize($field->value) : $field->value;
    }
  }
  //here we tack in the data from the district directory
  
  if ($user->nscc_profile_phone == '' || $user->nscc_profile_email_address=='' || $user->nscc_profile_mailstop ==''){
  	$district_data = nscc_profile_service_district_directory($user->nscc_profile_first_name,$user->nscc_profile_last_name);
  	//watchdog('district dir','From district:<pre>'.$district_data->Phone.'<pre>');
  	if ($user->nscc_profile_phone == ''){
  		$user->nscc_profile_phone = $district_data->Phone;
  	}
  	if ($user->nscc_profile_email_address == ''){
  		$user->nscc_profile_email_address = $district_data->Email;
  	}
  	if ($user->nscc_profile_mailstop == ''){
  		$user->nscc_profile_mailstop = $district_data->MailStop;
  	}
  }
  
}

function nscc_profile_save_profile(&$edit, &$user, $category, $register = FALSE) {
  if(!$category){
	$category='Me';
  }	
  //handle nscc_profile module's user data	
  $result = _nscc_profile_get_fields($category, $register);
  while ($field = db_fetch_object($result)) {
  	if ($field->name == 'nscc_profile_departments'){
  		$edit[$field->name] = implode(",",$edit[$field->name]);
  	} else {
	  // this is the wrong place to do this, but drupal sucks
   	  	if($field->type == 'textarea'){
	 		$edit[$field->name] = preg_replace('/<p>&nbsp;<\/p>/','',$edit[$field->name]);
	  	}
		if (_nscc_profile_field_serialize($field->type)) {
		  $edit[$field->name] = serialize($edit[$field->name]);
		}
    }
    db_query("DELETE FROM {nscc_profile_values} WHERE fid = %d AND uid = %d", $field->fid, $user->uid);
    db_query("INSERT INTO {nscc_profile_values} (fid, uid, value) VALUES (%d, %d, '%s')", $field->fid, $user->uid, $edit[$field->name]);
    // Mark field as handled (prevents saving to user->data).
    $edit[$field->name] = NULL;
  }
  //separately save the picture:
  // handled by the user module
  // Delete picture if requested, and if no replacement picture was given.
  if (!empty($edit['picture_delete'])) {
    if ($user->picture && file_exists($user->picture)) {
      file_delete($user->picture);
    }
    $edit['picture'] = '';
  }

}

function nscc_profile_view_field($user, $field) {
  // Only allow browsing of private fields for admins, if browsing is enabled,
  // and if a user has permission to view profiles. Note that this check is
  // necessary because a user may always see their own profile.
  $browse = user_access('access user profiles')
         && (user_access('administer users') || $field->visibility != PROFILE_PRIVATE)
         && !empty($field->page);

  if (isset($user->{$field->name}) && $value = $user->{$field->name}) {
    switch ($field->type) {
      case 'textarea':
        return check_markup($value);
      case 'textfield':
      case 'selection':
        return $browse ? l($value, 'profile/'. $field->name .'/'. $value) : check_plain($value);
      case 'checkbox':
        return $browse ? l($field->title, 'profile/'. $field->name) : check_plain($field->title);
      case 'url':
        return '<a href="'. check_url($value) .'">'. check_plain($value) .'</a>';
      case 'date':
        $format = substr(variable_get('date_format_short', 'm/d/Y - H:i'), 0, 5);
        // Note: Avoid PHP's date() because it does not handle dates before
        // 1970 on Windows. This would make the date field useless for e.g.
        // birthdays.
        $replace = array(
          'd' => sprintf('%02d', $value['day']),
          'j' => $value['day'],
          'm' => sprintf('%02d', $value['month']),
          'M' => map_month($value['month']),
          'Y' => $value['year'],
          'H:i' => NULL,
          'g:ia' => NULL,
        );
        return strtr($format, $replace);
      case 'list':
        $values = split("[,\n\r]", $value);
        $fields = array();
        if ($field->name == 'nscc_profile_departments'){
	        foreach ($values as $value) {
   		       if ($value = trim($value)) {
   		       		//look up department name
   		       		$department_obj = taxonomy_get_term($value);
   		       		$dept_name = $department_obj->name;
       	      		$fields[] = $browse ? l($dept_name, 'profile/'. $field->name .'/'. $value) : check_plain($value);
        		}
        	}
        } else {
	        foreach ($values as $value) {
   		       if ($value = trim($value)) {
       	      		$fields[] = $browse ? l($value, 'profile/'. $field->name .'/'. $value) : check_plain($value);
        		}
        	}
        }
        return implode(', ', $fields);
    }
  }
}

function nscc_profile_view_profile(&$user) {
  
  nscc_profile_load_profile($user);

  // Show private fields to administrators and people viewing their own account.
  if (user_access('administer users') || $GLOBALS['user']->uid == $user->uid) {
    $result = db_query('SELECT * FROM {nscc_profile_fields} WHERE visibility != %d ORDER BY category, weight', PROFILE_HIDDEN);
  }
  else {
    $result = db_query('SELECT * FROM {nscc_profile_fields} WHERE visibility != %d AND visibility != %d ORDER BY category, weight', PROFILE_PRIVATE, PROFILE_HIDDEN);
  }

  $fields = array();
  while ($field = db_fetch_object($result)) {
    if ($value = nscc_profile_view_field($user, $field)) {
      $title = ($field->type != 'checkbox') ? check_plain($field->title) : NULL;

      // Create a single fieldset for each category.
      if (!isset($user->content[$field->category])) {
        $user->content[$field->category] = array(
          '#type' => 'user_profile_category',
          '#title' => $field->category,
        );
      }

      $user->content[$field->category][$field->name] = array(
        '#type' => 'user_profile_item',
        '#title' => $title,
        '#value' => $value,
        '#weight' => $field->weight,
        '#attributes' => array('class' => 'nscc_profile-'. $field->name),
      );
    }
  }
  $user->content['Me']['#weight'] = 1;
  $user->content['About Me']['#weight'] = 3;
  if(isset($user->content['Emergency Contacts'])){
		$user->content['Emergency Contacts'] = array();
  }
  //error_log("--------------------------------------------",3,"/var/tmp/userlog.txt");
  //error_log(print_r($user,TRUE),3,"/var/tmp/userlog.txt");
}

function _nscc_profile_form_explanation($field) {


  if ($field->type == 'list') {
    $output = ' '. t('Put each item on a separate line or separate them by commas. No HTML allowed.');
  }
  $output = $field->explanation;
  if ($field->visibility == PROFILE_PRIVATE) {
    $output .= ' '. t('The content of this field is kept private and will not be shown publicly.');
  }

  return $output;
}

/** 
* --------------------------------------------------------------------------------------
*
*/
function nscc_profile_form_profile($edit, $user, $category, $register = FALSE) {
  if(!_is_admin_user($user)){	
		$fields = array();
  	return $fields;
  }	

  $result = _nscc_profile_get_fields($category, $register);
  $weight = 1;
  $fields = array();
  switch($category){

  	case "Emergency Contacts":
		$fields['Emergency Contacts'] = array(
		'#type' => 'fieldset',
		'#title' => 'Emergency Contacts',
		'#weight' => 1,
		'#description'=> 'These Contacts will be kept confidential. Only HR, Security, the President\'s Office and some Division Supervisors will be able to see them.',
		'Primary Contact' => array('#type' => 'fieldset', '#title' => 'Primary Contact','#collapsible'=> TRUE,
			'nscc_profile_ec1_name' => array('#type' => 'textfield','#title' => 'Primary Contact Name','#default_value' => $edit['nscc_profile_ec1_name'],'#maxlength' => 255,'#description' => 'This is the name of your primary emergency contact. The content of this field is kept private and will not be shown publicly.','#required' => '0'),
			'nscc_profile_ec1_relationship' => array('#type' => 'textfield','#title' => 'Primary Contact Relationship','#default_value' => $edit['nscc_profile_ec1_relationship'],'#maxlength' => 255,'#description' => 'What is your primary contact\'s relationship with you? The content of this field is kept private and will not be shown publicly.','#required' => '0'),
			'nscc_profile_ec1_phone' => array('#type' => 'textfield','#title' => 'Primary Contact Phone','#default_value' => $edit['nscc_profile_ec1_phone'],'#maxlength' => 255,'#description' => 'Your Primary Contact\'s telephone number. The content of this field is kept private and will not be shown publicly.','#required' => '0'),
			'nscc_profile_ec1_alt_phone' => array('#type' => 'textfield','#title' => 'Primary Contact Additional Phone','#default_value' => $edit['nscc_profile_ec1_alt_phone'],'#maxlength' => 255,'#description' => 'An additional phone number for your Primary Contact. The content of this field is kept private and will not be shown publicly.','#required' => '0'),
		),
		'Alternate Contact' => array('#type' => 'fieldset', '#title' => 'Alternate Contact','#collapsible'=> TRUE,'#collapsed'=> TRUE,
			'nscc_profile_ec2_name' => array('#type' => 'textfield','#title' => 'Alternate Contact Name','#default_value' => $edit['nscc_profile_ec2_name'],'#maxlength' => 255,'#description' => 'This is the name of your alternate contact. The content of this field is kept private and will not be shown publicly.','#required' => '0'),
			'nscc_profile_ec2_relationship' => array('#type' => 'textfield','#title' => 'Alternate Contact Relationship','#default_value' => $edit['nscc_profile_ec2_relationship'],'#maxlength' => 255,'#description' => 'This is your alternate contact\'s relationship to you. The content of this field is kept private and will not be shown publicly.','#required' => '0'),
			'nscc_profile_ec2_phone' => array('#type' => 'textfield','#title' => 'Alternate Contact Phone','#default_value' => $edit['nscc_profile_ec2_phone'],'#maxlength' => 255,'#description' => 'This is your alternate contact\'s phone number. The content of this field is kept private and will not be shown publicly.','#required' => '0'),
			'nscc_profile_ec2_alt_phone' => array('#type' => 'textfield','#title' => 'Alternate Contact Additional Phone','#default_value' => $edit['nscc_profile_ec2_alt_phone0000'],'#maxlength' => 255,'#description' => 'This an additional phone number for your alternate contact. The content of this field is kept private and will not be shown publicly.','#required' => '0' ),
		)
		);
		break;

	case "Picture":
		$current_picture = theme('user_picture', (object)$edit);
		if($edit['picture']){
			$picture_delete = array('#type' => 'checkbox', '#title' => t('Delete picture'), '#description' => t('Check this box to delete your current picture.'));
		} else {
			$picture_delete = array('#type' => 'hidden');
		}
	 	$fields['Picture'] = array(
			'#type'=>'fieldset',
			'#title'=>'Picture',
			'#weight'=> 5,
			'current_picture' => array( '#value' => $current_picture),
			'picture_delete' => $picture_delete,
			'picture_upload' => array('#type' => 'file', '#title' => t('Upload picture'), '#size' => 48, '#description' => t('Your virtual face or picture. Maximum dimensions are %dimensions and the maximum size is %size kB.', array('%dimensions' => variable_get('user_picture_dimensions', '85x85'), '%size' => variable_get('user_picture_file_size', '30'))) .' '. variable_get('user_picture_guidelines', '')),			
	 	);
    	$fields['#validate'][] = 'user_validate_picture';
		break;

	case "Signature":
	 	if (variable_get('user_signatures', 0) && module_exists('comment') && !$register) {
			$fields['Signature_settings'] = array(
				'#type'=>'fieldset',
				'#title'=>'Signature',
				'#weight'=> 5,
		 		);
   			 $fields['Signature_settings']['signature'] = array(
      			'#type' => 'textarea',
      			'#title' => t('Signature'),
      			'#default_value' => $edit['signature'],
      			'#description' => t('Your signature will be publicly displayed at the end of your comments.'),
      			'#wysiwyg'=> TRUE,
    		);
	 		
	 	}	
		break;

		
	default:
	  while ($field = db_fetch_object($result)) {
		$category = $field->category;
		if (!isset($fields[$category])) {
		  $fields[$category] = array('#type' => 'fieldset', '#title' => check_plain($category), '#weight' => $weight++);
		}
		// Deal with the departments field separately
		if ($field->category == 'About Me' && $field->name == 'nscc_profile_departments') {
			
			$departmentarray = taxonomy_get_tree(1);			
			$options = $field->required ? array() : array('--');
			foreach($departmentarray as $department_entry){
				$options[ $department_entry->tid ] = $department_entry->name;
			}
			$fields[$category][$field->name] = array('#type' => 'select',
			  '#title' => check_plain($field->title),
			  '#default_value' => isset($edit[$field->name]) ? explode(",",$edit[$field->name]) : '',
			  '#options' => $options,
			  '#description' => _nscc_profile_form_explanation($field),
			  '#required' => $field->required,
			  '#multiple' => TRUE,
			);
					
		} else { //end special departments field callout
		
			switch ($field->type) {
			  case 'textfield':
			  case 'url':
				$fields[$category][$field->name] = array('#type' => 'textfield',
				  '#title' => check_plain($field->title),
				  '#default_value' => isset($edit[$field->name]) ? $edit[$field->name] : '',
				  '#maxlength' => 255,
				  '#description' => _nscc_profile_form_explanation($field),
				  '#required' => $field->required,
				);
				if ($field->autocomplete) {
				  $fields[$category][$field->name]['#autocomplete_path'] = "profile/autocomplete/". $field->fid;
				}
				break;
			  case 'textarea':
				$fields[$category][$field->name][$field->name] = array('#type' => 'textarea',
				  '#title' => check_plain($field->title),
				  '#default_value' => isset($edit[$field->name]) ? $edit[$field->name] : '',
				  '#description' => _nscc_profile_form_explanation($field),
				  '#required' => $field->required,
	      		  '#wysiwyg'=> TRUE,
				);
				if ($field->name != 'nscc_profile_linkslist'){
					$fields[$category][$field->name][$field->name]['#wysiwyg'] = FALSE;
				
					$format = filter_formats(1);// this is filtered html, we may want fancier formats.
					$filter_dummy_form[$format->format] = array('#type' => 'value', '#value' => $format->format, '#parents' => array($field->name.'_format'));
					$filter_dummy_form['format']['guidelines'] = array('#title' => t('Formatting guidelines'),'#value' => '',);
					$fields[$category][$field->name]['format'] = $filter_dummy_form;
				}
				break;
			  case 'list':
				$fields[$category][$field->name] = array('#type' => 'textarea',
				  '#title' => check_plain($field->title),
				  '#default_value' => isset($edit[$field->name]) ? $edit[$field->name] : '',
				  '#description' => _nscc_profile_form_explanation($field),
				  '#required' => $field->required,
				);
				break;
			  case 'checkbox':
				$fields[$category][$field->name] = array('#type' => 'checkbox',
				  '#title' => check_plain($field->title),
				  '#default_value' => isset($edit[$field->name]) ? $edit[$field->name] : '',
				  '#description' => _nscc_profile_form_explanation($field),
				  '#required' => $field->required,
				);
				break;
			  case 'selection':
				$options = $field->required ? array() : array('--');
				$lines = split("[\n\r]", $field->options);
				foreach ($lines as $line) {
				  if ($line = trim($line)) {
					$options[$line] = $line;
				  }
				}
				$fields[$category][$field->name] = array('#type' => 'select',
				  '#title' => check_plain($field->title),
				  '#default_value' => isset($edit[$field->name]) ? $edit[$field->name] : '',
				  '#options' => $options,
				  '#description' => _nscc_profile_form_explanation($field),
				  '#required' => $field->required,
				);
				break;
			  case 'date':
				$fields[$category][$field->name] = array('#type' => 'date',
				  '#title' => check_plain($field->title),
				  '#default_value' => isset($edit[$field->name]) ? $edit[$field->name] : '',
				  '#description' => _nscc_profile_form_explanation($field),
				  '#required' => $field->required,
				);
				break;
			} //end switch generic field processing
		} //end if special field
	  } //end while field interation
	  break;
  }// end switch category
  
  $fields['#attributes']['enctype'] = 'multipart/form-data';
  $fields['#uid'] = $user->uid;
  return $fields;
}

/**
 * Helper function: update an array of user fields by calling profile_view_field
 */
function _nscc_profile_update_user_fields($fields, $account) {
  foreach ($fields as $key => $field) {
    $fields[$key]->value = nscc_profile_view_field($account, $field);
  }
  return $fields;
}

function nscc_profile_validate_profile($edit, $category) {
  $result = _nscc_profile_get_fields($category);
  while ($field = db_fetch_object($result)) {
    if ($edit[$field->name]) {
      if ($field->type == 'url') {
        if (!valid_url($edit[$field->name], TRUE)) {
          form_set_error($field->name, t('The value provided for %field is not a valid URL.', array('%field' => $field->title)));
        }
      }
    }
    else if ($field->required && !user_access('administer users')) {
      form_set_error($field->name, t('The field %field is required.', array('%field' => $field->title)));
    }
  }
  return $edit;
}

function nscc_profile_categories() {
  $data = array();
    $data[] = array(
      'name' => 'Me',
      'title' => 'Me',
      'weight' => 1,
      'access callback' => 'nscc_profile_category_access',
      'access arguments' => array(1, 'Me')
    );
    $data[] = array(
      'name' => 'Picture',
      'title' => 'Picture',
      'weight' => 5,
      'access callback' => 'nscc_profile_category_access',
      'access arguments' => array(1, 'Me')
    );
    $data[] = array(
      'name' => 'About Me',
      'title' => 'Bio',
      'weight' => 10,
      'access callback' => 'nscc_profile_category_access',
      'access arguments' => array(1, 'About Me')
    );
    $data[] = array(
      'name' => 'Signature',
      'title' => 'Signature',
      'weight' => 15,
      'access callback' => 'nscc_profile_category_access',
      'access arguments' => array(1, 'Me')
    );
    $data[] = array(
      'name' => 'Emergency Contacts',
      'title' => 'Emergency Contacts',
      'weight' => 20,
      'access callback' => 'nscc_profile_category_access',
      'access arguments' => array(1, 'Emergency Contacts')
    );
  return $data;
}

/**
 * Menu item access callback - check if a user has access to a profile category.
 */
function nscc_profile_category_access($account, $category) {
  if (user_access('administer users') && $account->uid > 0) {
    return TRUE;
  }
  else {
    return user_edit_access($account) && db_result(db_query("SELECT COUNT(*) FROM {nscc_profile_fields} WHERE category = '%s' AND visibility <> %d", $category, PROFILE_HIDDEN));
  }
}

/**
 * Process variables for nscc_profile-block.tpl.php.
 *
 * The $variables array contains the following arguments:
 * - $account
 * - $fields
 *
 * @see profile-block.tpl.php
 */
function template_preprocess_nscc_profile_block(&$variables) {

  $variables['picture'] = theme('user_picture', $variables['account']);
  $variables['nscc_profile'] = array();
  // Supply filtered version of $fields that have values.
  foreach ($variables['fields'] as $field) {
    if ($field->value) {
      $variables['nscc_profile'][$field->name]->title = check_plain($field->title);
      $variables['nscc_profile'][$field->name]->value = $field->value;
      $variables['nscc_profile'][$field->name]->type = $field->type;
    }
  }

}

/**
 * Process variables for nscc_profile-listing.tpl.php.
 *
 * The $variables array contains the following arguments:
 * - $account
 * - $fields
 *
 * @see nscc_profile-listing.tpl.php
 */
function template_preprocess_nscc_profile_listing(&$variables) {

  $variables['picture'] = theme('user_picture', $variables['account']);
  $variables['name'] = theme('username', $variables['account']);
  $variables['nscc_profile'] = array();
  // Supply filtered version of $fields that have values.
  foreach ($variables['fields'] as $field) {
    if ($field->value) {
      $variables['nscc_profile'][$field->name]->title = $field->title;
      $variables['nscc_profile'][$field->name]->value = $field->value;
      $variables['nscc_profile'][$field->name]->type = $field->type;
    }
  }

}

/**
 * Process variables for nscc_profile-wrapper.tpl.php.
 *
 * The $variables array contains the following arguments:
 * - $content
 *
 * @see nscc_profile-wrapper.tpl.php
 */
function template_preprocess_nscc_profile_wrapper(&$variables) {
  $variables['current_field'] = '';
  if ($field = arg(1)) {
    $variables['current_field'] = $field;
    // Supply an alternate template suggestion based on the browsable field.
    $variables['template_files'][] = 'nscc_profile-wrapper-'. $field;
  }
}

function _nscc_profile_field_types($type = NULL) {
  $types = array('textfield' => t('single-line textfield'),
                 'textarea' => t('multi-line textfield'),
                 'checkbox' => t('checkbox'),
                 'selection' => t('list selection'),
                 'list' => t('freeform list'),
                 'url' => t('URL'),
                 'date' => t('date'));
  return isset($type) ? $types[$type] : $types;
}

function _nscc_profile_field_serialize($type = NULL) {
  return $type == 'date';
}

function _nscc_profile_get_fields($category, $register = FALSE) {
  $args = array();
  $sql = 'SELECT * FROM {nscc_profile_fields} WHERE ';
  $filters = array();
  if ($register) {
    $filters[] = 'register = 1';
  }
  else {
    // Use LOWER('%s') instead of PHP's strtolower() to avoid UTF-8 conversion issues.
    $filters[] = "LOWER(category) = LOWER('%s')";
    $args[] = $category;
  }
  if (!user_access('administer users')) {
    $filters[] = 'visibility != %d';
    $args[] = PROFILE_HIDDEN;
  }
  $sql .= implode(' AND ', $filters);
  $sql .= ' ORDER BY category, weight';
  return db_query($sql, $args);
}


function nscc_profile_form_user_profile_form_alter(&$form,&$form_state){
	if ( $form['account'] ){
		$form['account']['mail']['#access'] = false;
		$form['account']['mail']['#required'] = false;
		$form['timezone']['#collapsed'] = true;
		$form['contact']['#collapsed'] = true;
		$form['picture']['#collapsible'] = true;
		$form['picture']['#collapsed'] = true;
		$form['signature_settings']['#collapsible'] = true;
		$form['signature_settings']['#collapsed'] = true;
	}
}


function nscc_profile_mail($key, &$message, $params){
	switch($key){
		case 'edfund_rec_req':
		  global $user;
			$user_full_name = $user->nscc_profile_first_name.' '.$user->nscc_profile_middle_name.' '.$user->nscc_profile_last_name;
			if(! trim($user_full_name)){
				//get name from ldap
				_ldapauth_init(db_result(db_query("SELECT sid FROM {ldapauth} WHERE status = '1' ORDER BY sid limit 1")));	
				$ldap_userdata = _ldapauth_user_lookup($user->name);
				watchdog('edfund_mail','ldap:<pre>'.print_r($ldap_userdata,true).'</pre>');
				$user_full_name = $ldap_userdata['gecos']['0'];
			}

		  $message['headers']['Reply-To']='<nscceducationfund@seattlecolleges.edu>';
			$message['subject']='NSCC EdFund Scholarship Recommendation for '.$user_full_name;
			$message['body']=$user_full_name.' has requested a recommendation from you as part of their scholarship application to the NSCC Ed Fund.'."\n".'If you feel this person IS QUALIFIED, please reply to this email. Your approval will be noted in the associated application jacket.';
			$message['body'].="\n".'While merely replying will register your approval, you may include any statements to be added to the application jacket in your reply.';			
		break;
 }
}

function nscc_profile_profile_popup($uname){
	$request_headers = apache_request_headers();
	$target_user = user_load(array('name'=>$uname));
	nscc_profile_load_profile($target_user);
	$json_array=array();
	//get profile data
	//return as json
	$json_array['headers'] = '<pre>'.print_r($headers,true).'</pre>';
	$json_array['uname'] = $target_user->name;
	$json_array['uid'] = $target_user->uid;
	$json_array['picture'] = $target_user->picture;
	//$json_array['fullname'] = $target_user->nscc_profile_title.' '.$target_user->nscc_profile_first_name.' '.$target_user->nscc_profile_middle_name.' '.$target_user->nscc_profile_last_name.','.$target_user->nscc_profile_degrees;
	$json_array['fullname'] = $target_user->nscc_profile_title != '' && $target_user->nscc_profile_title != '0' ? '<span class="person-title">'.$target_user->nscc_profile_title.'</span> ' : '';
	$json_array['fullname'] .= $target_user->nscc_profile_first_name != '' ? '<span class="person-first-name">'.$target_user->nscc_profile_first_name.'</span> ' : '';
	$json_array['fullname'] .= $target_user->nscc_profile_middle_name != '' ? '<span class="person-middle-name">'.$target_user->nscc_profile_middle_name.'</span> ' : '';
	$json_array['fullname'] .= $target_user->nscc_profile_last_name != '' ? '<span class="person-last-name">'.$target_user->nscc_profile_last_name.'</span> ' : '';
	$json_array['fullname'] .= $target_user->nscc_profile_degrees != '' ? ', <span class="person-degrees">'.$target_user->nscc_profile_degrees.'</span>' : '';
	$json_array['fullname'] = preg_replace('/\s+/',' ',$json_array['fullname']);
	$json_array['fullname'] = preg_replace('/ , /',', ',$json_array['fullname']);

	$json_array['email'] = $target_user->nscc_profile_email_address;
	$json_array['phone'] = $target_user->nscc_profile_phone;
	$json_array['office'] = $target_user->nscc_profile_office;
	$json_array['office_hours'] = $target_user->nscc_profile_office_hours;
	$json_array['job_title'] = $target_user->nscc_profile_job_title;
	//$json_array['udump'] = '<pre>'.print_r($target_user,true).'</pre>';
	//watchdog('XSS test',$json_array['headers']);
	header("Access-Control-Allow-Origin: ".$request_headers['Origin']);
	header("Access-Control-Allow-Headers: "."X-Requested-With");
	print drupal_json($json_array);
	exit();	
}


function theme_nscc_social_network_link($service,$service_username){
	switch($service){
		case 'twitter':
			return l('Follow me on Twitter','http://twitter.com/'.$service_username,array('class'=>'link-twitter'));
		case 'youtube':
			return l('My YouTube Channel','http://youtube.com/'.$service_username,array('class'=>'link-youtube'));		
		case 'facebook':
			return l('Friend me on Facebook','http://facebook.com/'.$service_username,array('class'=>'link-youtube'));		
	}
}

function nscc_profile_service_district_directory($fname,$lname){
	$url = "https://apps.seattlecolleges.edu/webservice/ldap/ldap.asmx/SearchADUsersJson";
	//$url = "https://apps.seattlecolleges.edu/webservice/sms/classdata.asmx/GetClassStatusJson";
	$post_fields = array('campus'=>"063",'lastname'=>$lname,'firstname'=>$fname,'department'=>'');
	$http_response = http_post_fields($url,$post_fields);
	if($http_response){
		$response = http_parse_message($http_response);
		if (_nscc_profile_isXML($response->body)===true){
			$xml_response = new SimpleXMLElement($response->body);
			if(count($xml_response->SearchAD_Result) == 1){
				return $xml_response->SearchAD_Result[0];
			}	
		}
	}
	return false;
}

function _nscc_profile_isXML($xml){
    libxml_use_internal_errors(true);

    $doc = new DOMDocument('1.0', 'utf-8');
    $doc->loadXML($xml);

    $errors = libxml_get_errors();
    if(empty($errors)){
        return true;
    }
    $error = $errors[0];
    if($error->level < 3){
        return true;
    }
		return false;
}
