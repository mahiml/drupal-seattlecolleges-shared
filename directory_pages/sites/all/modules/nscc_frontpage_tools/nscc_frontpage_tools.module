<?php

function nscc_frontpage_tools_menu(){
  $items['tools/%/announcements'] = array(
  	'title' => 'NSCC Emergency Announcements',
  	'description' => 'Lists all NSCC Emergency Announcements with administrative controls.',
  	'page callback' => '_nscc_frontpage_tools_manage_announcements',
		'page arguments'=>array(''),
  	'access arguments' => array('create nscc announcement'),
  	'type' => MENU_NORMAL_ITEM,
  );
  $items['tools/%/announcements/add'] = array(
    'title' => 'Publish a New NSCC Emergency Announcement',
		'description'=> 'Creates a new official NSCC Emergency Announcement and publishes it to various output channels.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('nscc_frontpage_tools_announcements_form'),
    'access arguments' => array('create nscc announcement'),
    'type' => MENU_SUGGESTED_ITEM,
  );	
  $items['tools/%/announcements/%/delete'] = array(
    'title' => 'Delete NSCC Emergency Announcement',
		'description'=> 'Deletes a specific NSCC Emergency Announcement. Cannot be undone.',
    'page callback' => '_nscc_frontpage_tools_delete_announcement',
    'page arguments' => array(3),
    'access arguments' => array('create nscc announcement'),
    'type' => MENU_CALLBACK,
  );	
  $items['tools/%/highlight'] = array(
  	'title' => 'NSCC Front Page Highlight Messages',
  	'description' => 'Lists all NSCC Front Page Highlight Messages with administrative controls.',
  	'page callback' => '_nscc_frontpage_tools_manage_highlights',
		'page arguments'=>array(''),
  	'access arguments' => array('manage nscc highlight'),
  	'type' => MENU_NORMAL_ITEM,
  );
  $items['tools/%/highlight/add'] = array(
    'title' => 'Publish a New NSCC Front Page Highlight Message',
		'description'=> 'Creates a new official NSCC Highlight Message and publishes.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('nscc_frontpage_tools_highlights_form'),
    'access arguments' => array('manage nscc highlight'),
    'type' => MENU_SUGGESTED_ITEM,
  );	
  $items['tools/%/highlight/%/delete'] = array(
    'title' => 'Delete NSCC Front Page Highlight Message',
		'description'=> 'Deletes a specific NSCC Front Page Highlight Messages. Cannot be undone.',
    'page callback' => '_nscc_frontpage_tools_delete_highlight',
    'page arguments' => array(3),
    'access arguments' => array('manage nscc highlight'),
    'type' => MENU_CALLBACK,
  );	
  $items['tools/%/highlight/%/edit'] = array(
    'title' => 'Edit NSCC Front Page Highlight Message',
		'description'=> 'Edits a specific NSCC Front Page Highlight Message.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('nscc_frontpage_tools_highlights_form',3,4),
    'access arguments' => array('manage nscc highlight'),
    'type' => MENU_CALLBACK,
  );	
  $items['tools/%/features'] = array(
    'title' => 'Edit NSCC Front Page Featured Articles',
		'description'=> 'Allows you to select the news stories featured on the front page.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('nscc_frontpage_tools_features_form'),
    'access arguments' => array('manage nscc featured articles'),
    'type' => MENU_CALLBACK,
  );	
  
	return $items;
}

function nscc_frontpage_tools_perm(){
	return array('manage nscc highlight','manage nscc featured articles');
}

function nscc_frontpage_tools_block($op = 'list', $delta = 0, $edit = array()) {
	switch($op){
		case 'list':
			$blocks[0]['info']= t('Frontpage Tools Menu');
			$blocks[0]['cache'] = BLOCK_CACHE_PER_PAGE | BLOCK_CACHE_PER_ROLE;
			return $blocks;
			break;
		case 'configure':
			break;
		case 'save':
			break;
		case 'view':
			switch($delta){
				case 0:
					//Tour Manage Menu
					$block['subject'] = '';
					if( user_access('manage nscc highlight') || user_access('create nscc announcement') ){
						$block['content'] = '<ul class="tools-menu">';
						$active='';
						if(user_access('create nscc announcement')){
							if (arg(2)=='announcements'){
								$active=' active';
							}
							$block['content'] .= '<li class="tools-leaf'.$active.'"><a title="Manage Site-wide Announcements" href="/tools/'.arg(1).'/announcements">Announcements</a></li>';
						}
						$active='';
						if(user_access('manage nscc highlight')){
							if (arg(2)=='highlight'){
								$active=' active';
							}
							$block['content'] .= '<li class="tools-leaf'.$active.'"><a title="Manage Front Page Highlight Message" href="/tools/'.arg(1).'/highlight">Highlight</a></li>';
						}
						if(user_access('manage nscc featured articles')){
							if (arg(2)=='features'){
								$active=' active';
							}
							$block['content'] .= '<li class="tools-leaf'.$active.'"><a title="Manage Front Page Featured Articles" href="/tools/'.arg(1).'/features">Features</a></li>';
						}
						$block['content'] .= '</ul>';
					} else {
						$block['content']='';
					}
					return $block;
					break;
				
			}		
	}
}	


/**
 *	Helper function to retrieve all active announcements.
 */
function _nscc_fp_tools_get_announcements($all = false) {
	$query = $all
		? "SELECT * FROM shared_announcements ORDER BY input_date DESC"
		: "SELECT * FROM shared_announcements WHERE publish_date <= CURRENT_TIMESTAMP AND rescind_date > CURRENT_TIMESTAMP ORDER BY rescind_date ASC, input_date DESC";
	return db_query($query);
}

/**
 *	Helper function to retrieve all feature stories.
 */
function _nscc_fp_tools_list_highlights() {
	$query = "SELECT * FROM shared_highlights ORDER BY input_date DESC";
	return db_query($query);
}

function _nscc_fp_tools_get_current_highlight() {
	$query = "SELECT id FROM shared_highlights WHERE publish_date <= CURRENT_TIMESTAMP AND rescind_date > CURRENT_TIMESTAMP ORDER BY publish_date DESC LIMIT 1;";
	return db_result(db_query($query));
}



/**
 *	Helper function to delete a specific announcement.
 */
function _nscc_frontpage_tools_delete_announcement($id) {
	$query = 'DELETE FROM shared_announcements WHERE announcement_id=%d';
	if (db_query($query, intval($id))) {
		drupal_set_message(t('Announcement #'.$id.' has been deleted'));
	} else {
		drupal_set_message(t('Delete failed. Deletion of the announcement failed due to an internal system problem.'), 'warning');
	}
	drupal_goto('tools/'.arg(1).'/announcements');
}

/**
 *	Helper function to delete a specific announcement.
 */
function _nscc_frontpage_tools_delete_highlight($id) {
	$query = 'DELETE FROM shared_highlights WHERE id=%d';
	if (db_query($query, intval($id))) {
		drupal_set_message(t('Highlight Message has been deleted'));
	} else {
		drupal_set_message(t('Delete failed. Deletion of the highlight failed due to an internal system problem.'), 'warning');
	}
	drupal_goto('tools/'.arg(1).'/highlight');
}


/**
 *	Lists all active NSCC announcements with interface controls for editors.
 */
function _nscc_frontpage_tools_manage_announcements() {
	drupal_add_css(drupal_get_path('module', 'nscc_frontpage_tools') .'/announcements.css');
	$uname=arg(1);
	$announcements = _nscc_fp_tools_get_announcements(true);
	$arows = array();
	$content = '';
	while ($record = db_fetch_array($announcements)) {
		$atype = ucwords($record['announcement_type']).'-type';
		$apublish = date('d-M-Y H:i', strtotime($record['publish_date']));
		$arescind = date('d-M-Y H:i', strtotime($record['rescind_date']));
		$astatus = (strtotime($record['rescind_date']) > time()) ? 'active' : 'expired';
#		$alist[] = "\t\t<tr class=\"$astatus\"><td rowspan=\"2\">$atype</td><td>${record['title']}</td><td>${record['message']}</td><td>$apublish</td><td>$arescind</td><td rowspan=\"2\"><a href=\"/tools/".arg(1)."/announcements/${record['announcement_id']}/delete\">Delete</a></td></tr>";
#		$alist[] = "\t\t<tr class=\"announcement-start $astatus $atype\"><td class=\"announcement-title\">${record['title']}</td><td class=\"announcement-pdate\">$apublish</td><td rowspan=\"2\" class=\"announcement-controls\"><a class=\"announcement-delete-control\" href=\"/tools/".arg(1)."/announcements/${record['announcement_id']}/delete\">Delete</a></td></tr>";
#		$alist[] = "\t\t<tr class=\"announcemnent-end $astatus $atype\"><td  class=\"announcement-message\">${record['message']}</td><td class=\"announcement-rdate\">$arescind</td></tr>";
		$arows[] = "<li class=\"announcement-wrapper $astatus $atype\"><div class=\"message-column\"><div class=\"announcement-title\">${record['title']}</div><div class=\"announcement-message\">${record['message']}</div></div><div class=\"dates-column\"><div class=\"announcement-pdate\" title=\"Publish Date\"><span class=\"date-label\">P:</span> $apublish</div><div class=\"announcement-rdate\" title=\"Rescind Date\"><span class=\"date-label\">R:</span> $arescind</div></div><div class=\"announcement-controls\"><a class=\"announcement-delete-control\" href=\"/tools/".arg(1)."/announcements/${record['announcement_id']}/delete\">Delete</a></div></li>";
	}
	if (empty($arows)) {
		$content = '<p>There are no active NSCC announcements.</p>';
	} else {
		$content = "<ul class=\"announcements-management\">".implode("\n",$arows)."</ul>";
	}
	return "<div class=\"announcements-list\"><p>Add a <a href=\"/tools/$uname/announcements/add\">New Announcement</a></p>\n$content\n</div>";
}

/**
 *	Lists all active NSCC highlight messages with interface controls for editors.
 */
function _nscc_frontpage_tools_manage_highlights() {
	drupal_add_css(drupal_get_path('module', 'nscc_frontpage_tools') .'/highlights.css');
	$uname=arg(1);
	$highlights = _nscc_fp_tools_list_highlights();
	$current_active_id = _nscc_fp_tools_get_current_highlight();
	//watchdog('nscc_fp_tools','Current active: '.$current_active_id);
	$hrows = array();
	$content = '';
	while ($record = db_fetch_array($highlights)) {
		$hstatus='';
		if ( $record['id'] == $current_active_id ){
			$hstatus = ' active';
		}
		$hpublish = date('d-M-Y H:i', strtotime($record['publish_date']));
		$hrescind = date('d-M-Y H:i', strtotime($record['rescind_date']));
		$hrows[] = "<li class=\"announcement-wrapper$hstatus\"><div class=\"message-column\"><div class=\"highlight-title\">${record['title']}</div></div><div class=\"dates-column\"><div class=\"highlight-pdate\" title=\"Publish Date\"><span class=\"date-label\">P:</span> $hpublish</div><div class=\"highlight-rdate\" title=\"Rescind Date\"><span class=\"date-label\">R:</span> $hrescind</div></div><div class=\"highlight-controls\"><a class=\"highlight-edit-control\" href=\"/tools/".arg(1)."/highlight/${record['id']}/edit\">Edit</a><a class=\"highlight-delete-control\" href=\"/tools/".arg(1)."/highlight/${record['id']}/delete\">Delete</a></div></li>";
	}
	if (empty($hrows)) {
		$content = '<p>There are no NSCC highlights in the database.</p>';
	} else {
		$content = "<ul class=\"highlights-management\">".implode("\n",$hrows)."</ul>";
	}
	return "<div class=\"highlights-list\"><p>Add a <a href=\"/tools/$uname/highlight/add\">New Highlight</a></p>\n$content\n</div>";
}



/**
 *	Input form for creating NSCC Announcements.
 */
function nscc_frontpage_tools_announcements_form($form_state) {
	$now = date('d-M-Y H:i');
	$form['#redirect'] = 'tools/'.arg(1).'/announcements';
	$form['announcement_type'] = array(
    '#title' => t('Announcement Type'),
    '#type' => 'select',
    '#options' => array(
    	'snow' => 'Snow',
    	'mechanical' => 'Mechanical',
    	'earthquake' => 'Earthquake',
    	'emergency'  => 'Emergency',
    	'unexpected' => 'Unexpected',
    ),
    '#description' => t('What type of message is this? Messages are auto-styled according to their type.'),
    '#required' => true,
    '#default_value' => 'snow',
	);
	$form['announcement_title'] = array(
    '#title' => t('Announcement Headline'),
    '#type' => 'textfield',
    '#description' => t('The title or headline for this announcement.'),
    '#size' => 64,
    '#maxlength' => 64,
    '#required' => true,
	);
	$form['message'] = array(
    '#title' => t('Announcement Message'),
    '#type' => 'textfield',
    '#description' => t('The body of the announcement. For Twitter-compatibility, this is restricted to 140 characters and will be formatted as a single paragraph of text.'),
    '#size' => 140,
    '#maxlength' => 140,
    '#required' => true,
	);
	$form['publish'] = array(
    '#title' => t('Publish'),
    '#type' => 'textfield',
    '#description' => t('The date and time this announcement should be made available to the public. Ex: 04-Mar-2011 15:00; alternative variations like 4-Mar-2011 3:00pm will also work, but avoid ambiguous ones like 3/4/2011. Omitting the time will be interpreted as midnight (00:00).'),
    '#size' => 20,
    '#maxlength' => 20,
    '#required' => true,
    '#default_value' => $now,
	);
	$form['rescind'] = array(
    '#title' => t('Rescind'),
    '#type' => 'textfield',
    '#description' => t('The date and time this announcement expires and should be rescinded. Ex: 04-Mar-2011 15:00; alternative variations like 4-Mar-2011 3:00pm will also work, but avoid ambiguous ones like 3/4/2011. Omitting the time will be interpreted as midnight (00:00).'),
    '#size' => 20,
    '#maxlength' => 20,
    '#required' => true,
    '#default_value' => $now,
	);
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Publish Announcement'),
  );
	return $form;
}


/**
 *	Custom validation of announcement form fields.
 */
function nscc_frontpage_tools_announcements_form_validate($form, &$form_state) {
	if (strtotime($form_state['values']['publish']) === false) {
		form_set_error('publish', t('Your specified publish date is invalid.'));
	}
	if (strtotime($form_state['values']['rescind']) === false) {
		form_set_error('rescind', t('Your specified rescind date is invalid.'));
	}
}


/**
 *	Submission handler for announcement form.
 */
function nscc_frontpage_tools_announcements_form_submit($form, &$form_state) {
	$pub_date = date('Y-m-d H:i:s', strtotime($form_state['values']['publish']));
	$resc_date = date('Y-m-d H:i:s', strtotime($form_state['values']['rescind']));
	$query = "INSERT INTO shared_announcements (announcement_type, title, message, publish_date, rescind_date) VALUES ('%s', '%s', '%s', '%s', '%s')";
	$result = db_query($query, $form_state['values']['announcement_type'], $form_state['values']['announcement_title'], $form_state['values']['message'], $pub_date, $resc_date);
	if ($result !== false) {
		drupal_set_message(t('Congratulations! Your announcment was successfully published.'));
	} else {
		drupal_set_message(t('Sorry, a database error prevented publication of your announcement.'), 'warning');
	}
}


/**
 *	Input form for creating NSCC Highlights.
 */
function nscc_frontpage_tools_highlights_form($form_state,$id=null,$action=null) {
	$now = date('d-M-Y H:i');
	$form['#redirect'] = 'tools/'.arg(1).'/highlight';
	$form['highlight_title'] = array(
    '#title' => t('Highlight Headline'),
    '#type' => 'textfield',
    '#description' => t('The title or headline for this announcement.'),
    '#size' => 100,
    '#maxlength' => 255,
    '#required' => true,
	);
	$form['link_dest'] = array(
    '#title' => t('Link Destination'),
    '#type' => 'textfield',
    '#description' => t('The URL the highlight should point to.'),
    '#size' => 100,
    '#maxlength' => 255,
    '#required' => true,
	);
	$form['publish'] = array(
    '#title' => t('Publish'),
    '#type' => 'textfield',
    '#description' => t('The date and time this highlight message should be made available to the public. Ex: 04-Mar-2011 15:00; alternative variations like 4-Mar-2011 3:00pm will also work, but avoid ambiguous ones like 3/4/2011. Omitting the time will be interpreted as midnight (00:00).'),
    '#size' => 20,
    '#maxlength' => 20,
    '#required' => true,
    '#default_value' => $now,
	);
	$form['rescind'] = array(
    '#title' => t('Rescind'),
    '#type' => 'textfield',
    '#description' => t('The date and time this highlight message expires and should be rescinded. Ex: 04-Mar-2011 15:00; alternative variations like 4-Mar-2011 3:00pm will also work, but avoid ambiguous ones like 3/4/2011. Omitting the time will be interpreted as midnight (00:00).'),
    '#size' => 20,
    '#maxlength' => 20,
    '#required' => true,
    '#default_value' => $now,
	);
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Post Highlight'),
  );

	if($id && $action =='edit'){
		$get_highlight_by_id = "SELECT * FROM shared_highlights WHERE ID= '%s';";
		$edit_highlight = db_fetch_object(db_query($get_highlight_by_id,$id));
		$form['id'] = array('#type'=> 'value', '#value'=>$id);
		$form['action'] = array('#type'=> 'value', '#value'=>$action);
		$form['highlight_title']['#default_value'] = $edit_highlight->title;
		$form['link_dest']['#default_value'] = $edit_highlight->link_dest;
		$form['publish']['#default_value'] = $edit_highlight->publish_date;
		$form['rescind']['#default_value'] = $edit_highlight->rescind_date;
		$form['submit']['#value'] = t('Update Highlight');	
	}
	return $form;
}

/**
 *	Custom validation of highlight form fields.
 */
function nscc_frontpage_tools_highlights_form_validate($form, &$form_state) {
	if (strtotime($form_state['values']['publish']) === false) {
		form_set_error('publish', t('Your specified publish date is invalid.'));
	}
	if (strtotime($form_state['values']['rescind']) === false) {
		form_set_error('rescind', t('Your specified rescind date is invalid.'));
	}
}

/**
 *	Submission handler for announcement form.
 */
function nscc_frontpage_tools_highlights_form_submit($form, &$form_state) {
	if($form_state['values']['action']){
		//update old
		$pub_date = date('Y-m-d H:i:s', strtotime($form_state['values']['publish']));
		$resc_date = date('Y-m-d H:i:s', strtotime($form_state['values']['rescind']));
		$query = "UPDATE shared_highlights SET title='%s',link_dest='%s',publish_date='%s',rescind_date='%s',input_date=now() WHERE id=%d;";
		$result = db_query($query, $form_state['values']['highlight_title'], $form_state['values']['link_dest'], $pub_date, $resc_date,$form_state['values']['id']);
		if ($result !== false) {
			drupal_set_message(t('Congratulations! Your highlight was successfully updated.'));
		} else {
			drupal_set_message(t('Sorry, a database error prevented updating of your highlight.'), 'warning');
		}
	} else {
		//insert new
		$pub_date = date('Y-m-d H:i:s', strtotime($form_state['values']['publish']));
		$resc_date = date('Y-m-d H:i:s', strtotime($form_state['values']['rescind']));
		$query = "INSERT INTO shared_highlights (title, link_dest, publish_date, rescind_date) VALUES ('%s', '%s', '%s', '%s');";
		$result = db_query($query, $form_state['values']['highlight_title'], $form_state['values']['link_dest'], $pub_date, $resc_date);
		if ($result !== false) {
			drupal_set_message(t('Congratulations! Your highlight was successfully published.'));
		} else {
			drupal_set_message(t('Sorry, a database error prevented publication of your highlight.'), 'warning');
		}
	}
}

/**
 *	Editing Front page feature articles form
 */

function nscc_frontpage_tools_features_form($form_state) {
	$current_nids = _nscc_frontpage_tools_features_get_nids();
	$form['feature_nid_1'] = array(
    '#title' => t('Position 1 Story NID'),
    '#type' => 'textfield',
    '#description' => t('Type in the Node ID for the article you want to appear in the first position. You can get the NID by looking the url between "node/" and "/edit" when editing the article'),
    '#size' => 10,
    '#maxlength' => 20,
    '#default_value'=>$current_nids[0],
    '#required' => true,
	);
	$form['feature_nid_2'] = array(
    '#title' => t('Position 2 Story NID'),
    '#type' => 'textfield',
    '#description' => t('Type in the Node ID for the article you want to appear in the second position. You can get the NID by looking the url between "node/" and "/edit" when editing the article'),
    '#size' => 10,
    '#maxlength' => 20,
    '#default_value'=>$current_nids[1],
    '#required' => true,
	);
	$form['feature_nid_3'] = array(
    '#title' => t('Position 3 Story NID'),
    '#type' => 'textfield',
    '#description' => t('Type in the Node ID for the article you want to appear in the third position. You can get the NID by looking the url between "node/" and "/edit" when editing the article'),
    '#size' => 10,
    '#maxlength' => 20,
    '#default_value'=>$current_nids[2],
    '#required' => true,
	);
	$form['feature_nid_4'] = array(
    '#title' => t('Position 4 Story NID'),
    '#type' => 'textfield',
    '#description' => t('Type in the Node ID for the article you want to appear in the fourth position. You can get the NID by looking the url between "node/" and "/edit" when editing the article'),
    '#size' => 10,
    '#maxlength' => 20,
    '#default_value'=>$current_nids[3],    
    '#required' => true,
	);
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Update'),
  );
	return $form;
}

function nscc_frontpage_tools_features_form_validate($form, &$form_state) {
	$index = 1;
	foreach ( array($form_state['values']['feature_nid_1'],$form_state['values']['feature_nid_2'],$form_state['values']['feature_nid_3'],$form_state['values']['feature_nid_4']) as $current_nid){
		if (! preg_match('/^\d+$/',$current_nid)){
				form_set_error('feature_nid_'.$index, t("Position $index Story NID: NIDs must be numerical"));
		}
		if (! _nscc_frontpage_tools_features_nid_is_valid($current_nid)){
				form_set_error('feature_nid_'.$index, t("Position $index Story NID: NIDs must for valid, published news nodes"));
		}
		$index++;
	}
}

function nscc_frontpage_tools_features_form_submit($form, &$form_state) {
		$array_nids = array($form_state['values']['feature_nid_1'],$form_state['values']['feature_nid_2'],$form_state['values']['feature_nid_3'],$form_state['values']['feature_nid_4']);
		if(_nscc_frontpage_tools_features_set_nids($array_nids)){
			drupal_set_message(t('Updated Featured articles.'), 'info');
		}	else {
			drupal_set_message(t('There was an error posting your featured articles to the database.'), 'warning');
		}	
}

function _nscc_frontpage_tools_features_get_nids(){
	$current_nids = array(0,0,0,0);
	$query = "SELECT news_nid_1,news_nid_2,news_nid_3,news_nid_4 FROM shared_featured_articles where featured_location = 'front page';";
	$result = db_query($query);
	if ($result == false) {
		drupal_set_message(t('Sorry, a database error prevented retrieving existing featured articles.'), 'warning');
		return $current_nids;
	} else {
		$row= db_fetch_array($result);
		$current_nids = array($row['news_nid_1'],$row['news_nid_2'],$row['news_nid_3'],$row['news_nid_4']);
		return $current_nids;
	}
}

function _nscc_frontpage_tools_features_nid_is_valid($target_nid){
	$query = "SELECT nid FROM news_node WHERE type IN ('story','notice','event','extendedstory') AND status=1 AND nid=%d;";
	$result = db_result(db_query($query,$target_nid));
	if( ! $result){
		return false;
	}
	return true;
}

function _nscc_frontpage_tools_features_set_nids($array_nids){
	$query = "UPDATE shared_featured_articles SET news_nid_1=%d,news_nid_2=%d,news_nid_3=%d,news_nid_4=%d where featured_location = 'front page';";
	$result = db_query($query,$array_nids);
	if ($result == false) {
		drupal_set_message(t('Sorry, a database error prevented updating featured articles.'), 'warning');
		return false;
	} else {
		return true;
	}
}

