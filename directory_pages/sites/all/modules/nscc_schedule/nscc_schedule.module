<?php
// $Id: nscc.module,v 1.236.2.3 2009/01/12 10:09:19 goba Exp $

function nscc_schedule_init(){
	drupal_add_js(drupal_get_path('module', 'nscc') .'/filter.courseoverlay.js');
}

function nscc_schedule_menu() {
/*
  //search page for current quarter	
  $items['schedule'] = array(
    'title callback' => 'nscc_schedule_quarter_title',
    'title arguments' => array('quarter'),	
    'page callback' => 'drupal_get_form',
    'page arguments'=>array('nscc_schedule_search_form'),
	  'access callback'=> TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'nscc_schedule.pages.inc',
  );	
*/
  $items['schedule'] = array(
  	'title'=>'Class Schedule & Academic Calendar',
    //'title callback' => 'nscc_schedule_landing_title',
    //'title arguments' => array('quarter'),	
    'page callback' => 'nscc_schedule_landing_page',
	  'access callback'=> TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'nscc_schedule.pages.inc',
  );	

  //search form	for a specified quarter	
  $items['schedule/%'] = array(
    'title callback' => 'nscc_schedule_quarter_title',
    'title arguments' => array('quarter',1),	
    'page callback' => 'drupal_get_form',
    'page arguments'=>array('nscc_schedule_search_form',1),
  	'access callback'=> TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'nscc_schedule.pages.inc',
  );	

  //search results	for a specified quarter	
  $items['schedule/%/search'] = array(
    'title callback' => 'nscc_schedule_quarter_title',
    'title arguments' => array('quarter',1),	
    'page callback' => 'drupal_get_form',
    'page arguments'=>array('nscc_schedule_search_form',1),
  	'access callback'=> TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'nscc_schedule.pages.inc',
  );	

  //search results	for a specified quarter	
  $items['schedule/%/search/%'] = array(
    'title callback' => 'nscc_schedule_quarter_title',
    'title arguments' => array('search',1),	
    'page callback' => 'nscc_schedule_search_results',
    'page arguments'=>array(1,3),
  	'access callback'=> TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'nscc_schedule.pages.inc',
  );	

  //course list		
  $items['schedule/%/course'] = array(	
    'title callback' => 'nscc_schedule_quarter_title',
    'title arguments' => array('courses',1),	
    'page callback' => 'nscc_schedule_display_courselist',
    'page arguments' => array(1),
  	'access callback'=> TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'nscc_schedule.pages.inc',
  );	
	
  //a specific course		
  $items['schedule/%/course/%'] = array(	
    'title callback' => 'nscc_schedule_quarter_title',
    'title arguments' => array('course',1,3),	
    'page callback' => 'nscc_schedule_display_course',
    'page arguments' => array(1,3),
	  'access callback'=> TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'nscc_schedule.pages.inc',
  );	

	//a specific item
	$items['schedule/%/item/%'] = array(	
    'title callback' => 'nscc_schedule_quarter_title',
    'title arguments' => array('item',1,3),	
    'page callback' => 'nscc_schedule_display_item',
    'page arguments' => array(1,3),
	  'access callback'=> TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'nscc_schedule.pages.inc',
  );	
  

  //dept list	
  $items['schedule/%/dept'] = array(
    'title callback' => 'nscc_schedule_quarter_title',
    'title arguments' => array('departments',1),	
    'page callback' => 'nscc_schedule_display_deptlist',
    'page arguments' => array(1),
    'access callback'=> TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'nscc_schedule.pages.inc',
  );	
  
  //a specific dept	
  $items['schedule/%/dept/%'] = array(	
    'title callback' => 'nscc_schedule_quarter_title',
    'title arguments' => array('department',1,3),	
    'page callback' => 'nscc_schedule_display_dept',
    'page arguments' => array(1,3),
	  'access callback'=> TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'nscc_schedule.pages.inc',
  );	

  //instructorlist		
  $items['schedule/%/instructor'] = array(	
    'title callback' => 'nscc_schedule_quarter_title',
    'title arguments' => array('instructors',1),	
    'page callback' => 'nscc_schedule_display_instructorlist',
    'page arguments' => array(1),
	  'access callback'=> TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'nscc_schedule.pages.inc',
  );	

  //an instructor, if no netid		
  $items['schedule/%/instructor/%'] = array(	
    'title callback' => 'nscc_schedule_quarter_title',
    'title arguments' => array('instructor',1,3),	
    'page callback' => 'nscc_schedule_display_instructor',
    'page arguments' => array(1,3),
	  'access callback'=> TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'nscc_schedule.pages.inc',
  );	

  //alternative learning modalities		
  $items['schedule/%/alternative'] = array(	
    'title callback' => 'nscc_schedule_quarter_title',
    'title arguments' => array('alternatives',1),	
    'page callback' => 'nscc_schedule_display_altindex',
    'page arguments' => array(1),
	  'access callback'=> TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'nscc_schedule.pages.inc',
  );	

  //specific alternative learning modalities		
  $items['schedule/%/alternative/%'] = array(	
    'title callback' => 'nscc_schedule_quarter_title',
    'title arguments' => array('alternative',1,3),	
    'page callback' => 'nscc_schedule_display_alt',
    'page arguments' => array(1,3),
	  'access callback'=> TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'nscc_schedule.pages.inc',
  );	
  //specific alternative learning modalities		
  $items['schedule/%/IS'] = array(	
    'title callback' => 'nscc_schedule_quarter_title',
    'title arguments' => array('alternative',1,2),	
    'page callback' => 'nscc_schedule_display_alt',
    'page arguments' => array(1,2),
	  'access callback'=> TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'nscc_schedule.pages.inc',
  );	

  //catalog - no associated yrq		
  $items['catalog/course/%'] = array(	
    'title callback' => 'nscc_schedule_catalog_title',
    'title arguments' => array('course',2),	
    'page callback' => 'nscc_schedule_catalog_display_course',
    'page arguments' => array(2),
	  'access callback'=> TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'nscc_schedule.pages.inc',
  );	
  //catalog - no associated yrq		
  $items['catalog/courses'] = array(	
		'title'=>'Details on an array of courses',
    'page callback' => 'nscc_schedule_catalog_display_courses',
    'access callback'=> TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'nscc_schedule.pages.inc',
  );	

  //catalog - no associated yrq		
  $items['catalog/course/%/%'] = array(	
    'title callback' => 'nscc_schedule_catalog_title',
    'title arguments' => array('course',2),	
    'page callback' => 'nscc_schedule_catalog_display_course',
    'page arguments' => array(2,3),
	  'access callback'=> TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'nscc_schedule.pages.inc',
  );	

  //Print export: standard data set, default yrq.
  $items['schedule/export'] = array(
    'title callback' => 'nscc_schedule_quarter_title',
    'title arguments' => array('export',1),	
    'page callback' => 'nscc_schedule_export',
  	'access callback'=> TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'nscc_schedule.pages.inc',
  );	

  //Print export: standard data set, specified yrq.
  $items['schedule/export/%'] = array(
    'title callback' => 'nscc_schedule_quarter_title',
    'title arguments' => array('export',1),	
    'page callback' => 'nscc_schedule_export',
    'page arguments'=>array(2),
  	'access callback'=> TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'nscc_schedule.pages.inc',
  );

	//Print export: abridged data set, default yrq.
	$items['schedule/abbr-export'] = array(
    'title callback' => 'nscc_schedule_quarter_title',
    'title arguments' => array('export',1),	
    'page callback' => 'nscc_schedule_export_abbr',
  	'access callback'=> TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'nscc_schedule.pages.inc',
	);

	//Print export: abridged data set, specified yrq.
	$items['schedule/abbr-export/%'] = array(
    'title callback' => 'nscc_schedule_quarter_title',
    'title arguments' => array('export',1),	
    'page callback' => 'nscc_schedule_export_abbr',
    'page arguments' => array(2),
  	'access callback'=> TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'nscc_schedule.pages.inc',
	);

  //export a specific item
  $items['schedule/service/%/item/%'] = array(	
		'title'=>'Item Details Service',
    'page callback' => 'nscc_schedule_export_item',
    'page arguments' => array(2,4),
	  'access callback'=> TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'nscc_schedule.pages.inc',
  );	

	//gets itemstatus based on district web services
  $items['schedule/service/%/itemstatus/%'] = array(	
		'title'=>'Item Details Service',
    'page callback' => 'nscc_schedule_service_itemstatus',
    'page arguments' => array(2,4),
	  'access callback'=> TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'nscc_schedule.pages.inc',
  );	
  
 	//returns instructor image link 
  $items['schedule/ajax/instructor/imageurl/%'] = array(	
		'title'=>'Instructor image url',
    'page callback' => 'nscc_schedule_instructor_image_url',
    'page arguments' => array(4),
	  'access callback'=> TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'nscc_schedule.pages.inc',
  );	

  $items['admin/settings/nscc_schedule'] = array(
    'title' => 'NSCC Class Schedule',
	  'description'=> 'Manipulate settings for the NSCC online class schedule.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('nscc_schedule_admin_settings'),
    'access arguments' => array('administer class schedule'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'nscc_schedule.admin.pages.inc',
  );
  
  
  $items['manage/schedule'] = array(
    'title' => 'Class Schedule Management',
	  'description'=> 'Edit the Online Schedule Data',
    'page callback' => '_nscc_schedule_manage_page',
    'access arguments' => array('access class schedule manage menu'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'nscc_schedule.manage.inc',
  );
  $items['manage/schedule/quarter_details'] = array(
    'title' => 'Quarter Details',
	  'description'=> 'Edit Quarter Blurb, publish quarter',
    'page callback' => 'drupal_get_form',
    'page arguments'=>array('nscc_schedule_quarter_selector_form'),
    'access arguments' => array('edit quarter details'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'nscc_schedule.manage.inc',
  );

  $items['manage/schedule/quarter_details/%'] = array(
    'title' => 'Edit Quarter Details',
	  'description'=> 'Edit Quarter Blurb, publish quarter',
    'page callback' => 'drupal_get_form',
    'page arguments'=>array('nscc_schedule_quarter_details_form',3),
    'access arguments' => array('edit quarter details'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'nscc_schedule.manage.inc',
  );

  $items['manage/schedule/department_details'] = array(
    'title' => 'Department Details',
	  'description'=> 'Edit department title, dean, and blurb',
    'page callback' => 'drupal_get_form',
    'page arguments'=>array('nscc_schedule_dept_selector_form'),
    'access arguments' => array('edit department details'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'nscc_schedule.manage.inc',
  );

  $items['manage/schedule/department_details/%'] = array(
    'title' => 'Edit Department Details',
	  'description'=> 'Edit department title, dean, and blurb',
	  //'page callback' => 'nscc_schedule_manage_callback',
    'page callback' => 'drupal_get_form',
    'page arguments'=>array('nscc_schedule_dept_details_form',3),
    'access arguments' => array('edit department details'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'nscc_schedule.manage.inc',
  );
  
  $items['manage/schedule/course_details'] = array(
    'title' => 'Course Details',
	  'description'=> 'Edit course title, web/print descriptions, item details',
    'page callback' => 'drupal_get_form',
    'page arguments'=>array('nscc_schedule_course_selector_form'),
    'access arguments' => array('edit course descriptions'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'nscc_schedule.manage.inc',
  );

  $items['manage/schedule/course_details/%'] = array(
    'title' => 'Course Details for @course',
    'title callback'=> t,
    'title arguments'=>array('@course'=> 3),
	  'description'=> 'Edit course title, web/print descriptions, item details',
	  //'page callback' => 'nscc_schedule_manage_callback',
    'page callback' => 'drupal_get_form',
    'page arguments'=>array('nscc_schedule_course_details_form',3),
    'access arguments' => array('edit course descriptions'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'nscc_schedule.manage.inc',
  );

  
  $items['manage/schedule/el_details'] = array(
    'title' => 'Elearning Details',
	  'description'=> 'Edit course title, web/print descriptions, item details',
    'page callback' => 'drupal_get_form',
    'page arguments'=>array('nscc_schedule_quarter_selector_form'),
    'access arguments' => array('edit elearning details'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'nscc_schedule.manage.inc',
  );
	$items['manage/schedule/el_details/%'] = array(
    'title' => 'Edit Elearning Details',
	  'description'=> 'Edit Elearning Details',
    'page callback' => 'nscc_schedule_el_listing',
    'page arguments'=>array(3),
    'access arguments' => array('edit elearning details'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'nscc_schedule.manage.inc',
	);
	$items['manage/schedule/el_details/%/ajax_update'] = array(
    'title' => 'Update OnCampus Meetings',
	  'description'=> 'Update OnCampus Meetings',
    'page callback' => 'nscc_schedule_el_details_update',
    'page arguments'=>array(3),
    'access arguments' => array('edit elearning details'),
    'type' => MENU_CALLBACK,
    'file' => 'nscc_schedule.manage.inc',
	);

  $items['manage/schedule/item_tags'] = array(
    'title' => 'Item Tag definitions',
	  'description'=> 'Edit custom item tag names,abbrieviations, and text',
    'page callback' => 'nscc_schedule_item_taglist',
    'access arguments' => array('edit item tags'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'nscc_schedule.manage.inc',
  );
  $items['manage/schedule/item_tags/edit/%'] = array(
    'title' => 'Update Item Tag',
	  'description'=> '',
    'page callback' => 'drupal_get_form',
	  'page arguments'=>array('nscc_schedule_define_item_tags_form',4),
    'access arguments' => array('edit item tags'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'nscc_schedule.manage.inc',
  );
  $items['manage/schedule/item_tags/add'] = array(
    'title' => 'Add Item Tag',
	  'description'=> '',
    'page callback' => 'drupal_get_form',
	  'page arguments'=>array('nscc_schedule_add_item_tag_form'),
    'access arguments' => array('edit item tags'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'nscc_schedule.manage.inc',
  );
  $items['manage/schedule/course_tags'] = array(
    'title' => 'Course Tag definitions',
	  'description'=> 'Edit custom course tag names,abbrieviations, and text',
    'page callback' => 'nscc_schedule_course_taglist',
    'access arguments' => array('edit course tags'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'nscc_schedule.manage.inc',
  );
  $items['manage/schedule/course_tags/edit/%'] = array(
    'title' => 'Update Course Tag',
	  'description'=> '',
    'page callback' => 'drupal_get_form',
	  'page arguments'=>array('nscc_schedule_define_course_tags_form',4),
    'access arguments' => array('edit course tags'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'nscc_schedule.manage.inc',
  );
  $items['manage/schedule/course_tags/add'] = array(
    'title' => 'Add Course Tag',
	  'description'=> '',
    'page callback' => 'drupal_get_form',
	  'page arguments'=>array('nscc_schedule_add_course_tag_form'),
    'access arguments' => array('edit course tags'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'nscc_schedule.manage.inc',
  );
  $items['manage/schedule/assign_course_tags'] = array(
    'title' => 'Assign Course Tags',
	  'description'=> 'Assign Course Tags (commonly degree distribution requirements) to courses',
    'page callback' => 'drupal_get_form',
    'page arguments'=>array('nscc_schedule_quarter_selector_course_tags_form'),
    'access arguments' => array('edit course tags'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'nscc_schedule.manage.inc',
  );
  $items['manage/schedule/assign_course_tags/%'] = array(
    'title' => 'Assign Course Tags',
	  'description'=> 'Assign Course Tags (commonly degree distribution requirements) to courses',
    'page callback' => 'nscc_schedule_course_tag_assignment',
    'page arguments'=>array(3),
    'access arguments' => array('edit course tags'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'nscc_schedule.manage.inc',
  );
  $items['manage/schedule/ajax_assign_course_tag'] = array(
    'title' => 'Assign a course tag',
	  'description'=> 'Ajax service to assign a single tag to a course',
    'page callback' => 'nscc_schedule_ajax_assign_course_tag',
    'access arguments' => array('edit course tags'),
    'type' => MENU_CALLBACK,
    'file' => 'nscc_schedule.manage.inc',
  );
  $items['manage/schedule/is_details'] = array(
    'title' => 'IS Courses',
	  'description'=> 'Describe Coordinated Studies and Linked Courses',
    'page callback' => 'drupal_get_form',
    'page arguments'=>array('nscc_schedule_quarter_selector_form'),
    'access arguments' => array('edit IS details'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'nscc_schedule.manage.inc',
  );
  $items['manage/schedule/is_details/%'] = array(
    'title' => 'Edit Integrated Studies Courses',
	  'description'=> 'Describe Coordinated Studies and Linked Courses',
    'page callback' => 'nscc_schedule_is_listing',
    'page arguments'=>array(3),
    'access arguments' => array('edit IS details'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'nscc_schedule.manage.inc',
  );
  $items['manage/schedule/is_details/%/ajax_add_cs_course'] = array(
    'title' => 'Add A Coordinated Studies Course',
	  'description'=> 'Add A Coordinated Studies Course',
    'page callback' => 'nscc_schedule_is_cs_add',
    'page arguments'=>array(3),
    'access arguments' => array('edit IS details'),
    'type' => MENU_CALLBACK,
    'file' => 'nscc_schedule.manage.inc',
  );

  $items['manage/schedule/is_details/%/cs/%'] = array(
    'title' => 'Edit A Coordinated Studies Course',
	  'description'=> 'Edit A Coordinated Studies Course',
    'page callback' => 'nscc_schedule_is_cs_edit',
    'page arguments'=>array(3,5),
    'access arguments' => array('edit IS details'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'nscc_schedule.manage.inc',
  );
  $items['manage/schedule/is_details/%/cs/%/ajax_delete_course'] = array(
    'title' => 'Delete A Coordinated Studies Course',
	  'description'=> 'Delete A Coordinated Studies Course',
    'page callback' => 'nscc_schedule_is_cs_delete_course',
    'page arguments'=>array(3,5),
    'access arguments' => array('edit IS details'),
    'type' => MENU_CALLBACK,
    'file' => 'nscc_schedule.manage.inc',
  );
  $items['manage/schedule/is_details/%/cs/%/ajax_update_section'] = array(
    'title' => 'Update A Coordinated Studies Course Section Code',
	  'description'=> 'Update A Coordinated Studies Section Code',
    'page callback' => 'nscc_schedule_is_cs_update_section',
    'page arguments'=>array(3,5),
    'access arguments' => array('edit IS details'),
    'type' => MENU_CALLBACK,
    'file' => 'nscc_schedule.manage.inc',
  );
  $items['manage/schedule/is_details/%/cs/%/ajax_update_title'] = array(
    'title' => 'Update A Coordinated Studies Course Title',
	  'description'=> 'Update A Coordinated Studies Title',
    'page callback' => 'nscc_schedule_is_cs_update_title',
    'page arguments'=>array(3,5),
    'access arguments' => array('edit IS details'),
    'type' => MENU_CALLBACK,
    'file' => 'nscc_schedule.manage.inc',
  );
  $items['manage/schedule/is_details/%/cs/%/ajax_update_desc'] = array(
    'title' => 'Update A Coordinated Studies Course Description',
	  'description'=> 'Update A Coordinated Studies Description',
    'page callback' => 'nscc_schedule_is_cs_update_desc',
    'page arguments'=>array(3,5),
    'access arguments' => array('edit IS details'),
    'type' => MENU_CALLBACK,
    'file' => 'nscc_schedule.manage.inc',
  );
  $items['manage/schedule/is_details/%/cs/%/ajax_update_rr'] = array(
    'title' => 'Update A Coordinated Studies Course Registration Requirements',
	  'description'=> 'Update A Coordinated Studies Registration Requirements',
    'page callback' => 'nscc_schedule_is_cs_update_rr',
    'page arguments'=>array(3,5),
    'access arguments' => array('edit IS details'),
    'type' => MENU_CALLBACK,
    'file' => 'nscc_schedule.manage.inc',
  );
  $items['manage/schedule/is_details/%/lc/%'] = array(
    'title' => 'Edit A Linked Course',
	  'description'=> 'Edit A Linked Course',
    'page callback' => 'nscc_schedule_is_lc_edit',
    'page arguments'=>array(3,5),
    'access arguments' => array('edit IS details'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'nscc_schedule.manage.inc',
  );
  $items['manage/schedule/is_details/%/ajax_add_lc_course'] = array(
    'title' => 'Add A Linked Course',
	  'description'=> 'Add A Linked Course',
    'page callback' => 'nscc_schedule_is_lc_add',
    'page arguments'=>array(3),
    'access arguments' => array('edit IS details'),
    'type' => MENU_CALLBACK,
    'file' => 'nscc_schedule.manage.inc',
  );
  $items['manage/schedule/is_details/%/lc/%/ajax_delete_course'] = array(
    'title' => 'Delete A Linked Course',
	  'description'=> 'Delete A Linked Course',
    'page callback' => 'nscc_schedule_is_lc_delete_course',
    'page arguments'=>array(3,5),
    'access arguments' => array('edit IS details'),
    'type' => MENU_CALLBACK,
    'file' => 'nscc_schedule.manage.inc',
  );
  $items['manage/schedule/is_details/%/lc/%/ajax_update_title'] = array(
    'title' => 'Update A Linked Course Title',
	  'description'=> 'Update A Linked Course Title',
    'page callback' => 'nscc_schedule_is_lc_update_title',
    'page arguments'=>array(3,5),
    'access arguments' => array('edit IS details'),
    'type' => MENU_CALLBACK,
    'file' => 'nscc_schedule.manage.inc',
  );
  $items['manage/schedule/is_details/%/lc/%/ajax_update_desc'] = array(
    'title' => 'Update A Linked Course Description',
	  'description'=> 'Update A Linked Course Description',
    'page callback' => 'nscc_schedule_is_lc_update_desc',
    'page arguments'=>array(3,5),
    'access arguments' => array('edit IS details'),
    'type' => MENU_CALLBACK,
    'file' => 'nscc_schedule.manage.inc',
  );
  $items['manage/schedule/is_details/%/lc/%/ajax_update_rr'] = array(
    'title' => 'Update A Linked Course Registration Requirements',
	  'description'=> 'Update A Linked Course Registration Requirements',
    'page callback' => 'nscc_schedule_is_lc_update_rr',
    'page arguments'=>array(3,5),
    'access arguments' => array('edit IS details'),
    'type' => MENU_CALLBACK,
    'file' => 'nscc_schedule.manage.inc',
  );
 $items['manage/schedule/is_details/%/lc/%/ajax_remove_item'] = array(
    'title' => 'Remove an Item from a Linked Course',
	  'description'=> 'Remove an Item from a Linked Course',
    'page callback' => 'nscc_schedule_is_lc_remove_item',
    'page arguments'=>array(3,5),
    'access arguments' => array('edit IS details'),
    'type' => MENU_CALLBACK,
    'file' => 'nscc_schedule.manage.inc',
  );
 $items['manage/schedule/is_details/%/lc/%/ajax_add_item'] = array(
    'title' => 'Add an Item to a Linked Course',
	  'description'=> 'Add an Item to a Linked Course',
    'page callback' => 'nscc_schedule_is_lc_add_item',
    'page arguments'=>array(3,5),
    'access arguments' => array('edit IS details'),
    'type' => MENU_CALLBACK,
    'file' => 'nscc_schedule.manage.inc',
  );

  $items['manage/schedule/export'] = array(
    'title' => 'Print Schedule Export',
	  'description'=> 'Export a given Quarter Schedule for Print',
    'page callback' => 'drupal_get_form',
    'page arguments'=>array('nscc_schedule_quarter_selector_form'),
    'access arguments' => array('export schedule'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'nscc_schedule.pages.inc',
  );	

  $items['manage/schedule/export/%'] = array(
    'title callback' => 'nscc_schedule_quarter_title',
    'title arguments' => array('export',1),	
    'page callback' => 'nscc_schedule_export',
    'page arguments'=>array(2),
    'access arguments' => array('export schedule'),
    'type' => MENU_CALLBACK,
    'file' => 'nscc_schedule.pages.inc',
  );

	$items['manage/schedule/abbr-export'] = array(
    'title' => 'Print Schedule Export - Short form',
	  'description'=> 'Export a Quarter for the Early Fall Schedule',
    'page callback' => 'drupal_get_form',
    'page arguments'=>array('nscc_schedule_quarter_selector_form'),
    'access arguments' => array('export schedule'),
    'type' => MENU_CALLBACK,
    'file' => 'nscc_schedule.pages.inc',
	);

	$items['manage/schedule/abbr-export/%'] = array(
    'title callback' => 'nscc_schedule_quarter_title',
    'title arguments' => array('export',1),	
    'page callback' => 'nscc_schedule_export_abbr',
    'page arguments' => array(2),
    'access arguments' => array('export schedule'),
    'type' => MENU_CALLBACK,
    'file' => 'nscc_schedule.pages.inc',
	);
  
  
	return $items;
}

/**
 *	Callback function to generates page title
 */
function nscc_schedule_quarter_title($type,$yrq = null,$detail = null){
	if(!$yrq){
		$yrq = _schedule_get_current_yrq();
	}
	switch($type){
		case 'quarter':
			return _schedule_yrq_to_quarter($yrq).' Class Schedule';
		case 'search':
			return _schedule_yrq_to_quarter($yrq).' Class Schedule';
		case 'export':
			return _schedule_yrq_to_quarter($yrq).' Class Schedule';
		case 'departments':
			return 'All Departments | '._schedule_yrq_to_quarter($yrq).' Class Schedule';
		case 'department':
			return "$detail Department | "._schedule_yrq_to_quarter($yrq).' Class Schedule';
		case 'courses':
			return 'All Courses | '._schedule_yrq_to_quarter($yrq).' Class Schedule';
		case 'course':
			$clean_course_num = _nscc_schedule_ds_decode($detail);
//			return "$detail Course | "._schedule_yrq_to_quarter($yrq).' Class Schedule';
			return "$clean_course_num Course | "._schedule_yrq_to_quarter($yrq).' Class Schedule';
		case 'items':
			return 'All Items | '._schedule_yrq_to_quarter($yrq).' Class Schedule';
		case 'item':
			return "$detail Item | "._schedule_yrq_to_quarter($yrq).' Class Schedule';
		case 'instructors':
			return 'All Instructors | '._schedule_yrq_to_quarter($yrq).' Class Schedule';
		case 'instructor':
			return "$detail Instructors | "._schedule_yrq_to_quarter($yrq).' Class Schedule';
		case 'alternatives':
			return 'Alternative Learning Modes | '._schedule_yrq_to_quarter($yrq).' Class Schedule';
		case 'alternative':
			return "$detail | "._schedule_yrq_to_quarter($yrq).' Class Schedule';

	}

	//default
	return _schedule_yrq_to_quarter($yrq)." Class Schedule";
}

function nscc_schedule_catalog_title($type, $detail = null) {
	$detail = _nscc_schedule_ds_decode($detail);
	switch($type){
		case 'course':
			return "$detail Course |  Course Catalog";
	}

	return "Course Catalog";
}


function nscc_schedule_perm(){
	return array(	'administer class schedule',
								'access class schedule manage menu',
								'edit quarter details',
								'edit department details',
								'edit item tags',
								'edit course titles',
								'edit course details',
								'edit elearning details',
								'export schedule',
								'edit IS details',
								'edit course tags');
}


/**
 * Implementation of hook_filter().
 */
function nscc_schedule_filter($op,$delta=0,$format=-1,$text=''){
	switch($op){
		case 'list':
			return array(
				0=>t('Courses_tagged_as tag filter'),
			);
		
		case 'description':
			$descriptions = array(
				0=>t('Enables the Courses_tagged_as() tag to for in-copy course lists.'),
			);
			return $descriptions[$delta];
			break;
			
		case 'no cache':
			$cache_settings = array(
				0=>true,
			);
			return $cache_settings[$delta];
			break;
				
		case 'prepare':
			return $text;
			break;
			
		case 'process':
			switch($delta){
				case '0':
					return preg_replace_callback("/courses_tagged_as\((.*)\)/U",function($matches){
																															$tag = strtoupper( preg_replace('/\s/','',$matches[1]) ); 
																															$courselist = _schedule_get_courses_matching_tag($tag,_schedule_get_next_yrq(_schedule_get_current_yrq()));
																															//watchdog('coursefilter','<pre>'.print_r($courselist,true).'</pre>');
																															foreach($courselist as $course){
																																$output .= "<li class=\"courselist-item\"><span class=\"course-overlay\">$course</span></li>";
																															}			
																															//return "<span class=\"course-overlay\"><a href=\"https://northseattle.edu/catalog/course/$urlcourse\">$course</a></span>";
																															return "<ul class=\"courselist-by-tag\">".$output."</ul>";
																														}
																													,$text);
					
					break;
			}
			break;
			
		default:
			return $text;				
	}
}

function nscc_schedule_filter_tips($delta,$format,$long=false){
	switch($delta){
		case 0:
			if($long){
				return t('Use Courses_tagged_as(tag) to insert a list of matching courses.');
			}else{
				return t('Use Courses_tagged_as(tag) to insert a list of matching courses.');
			}
			break;
	}
}



/**
*	Implementation of hook_block()
*/
function nscc_schedule_block($op='list', $delta=0,$edit=array()){
	switch ($op){

		case 'list':
			$blocks[0]['info'] = t('Quarter Details');
			$blocks[0]['cache'] = BLOCK_CACHE_GLOBAL;
			$blocks[0]['region'] = 'Left sidebar';
			$blocks[0]['weight'] = 10;
			$blocks[0]['status'] = TRUE;
			$blocks[0]['pages'] = "schedule\nschedule/*";

			$blocks[1]['info'] = t('Quarter Selector');
			$blocks[1]['cache'] = BLOCK_CACHE_PER_PAGE;
			$blocks[1]['region'] = 'Content Leader';
			$blocks[1]['weight'] = 0;
			$blocks[1]['status'] = TRUE;
			$blocks[1]['pages'] = "schedule\nschedule/*";

			$blocks[2]['info'] = t('Tag Key');
			$blocks[2]['cache'] = BLOCK_CACHE_GLOBAL;
			$blocks[2]['region'] = 'Left sidebar';
			$blocks[2]['weight'] = 20;
			$blocks[2]['status'] = TRUE;
			$blocks[2]['pages'] = "schedule\nschedule/*";

			$blocks[3]['info'] = t('Schedule Menu');
			$blocks[3]['cache'] = BLOCK_CACHE_GLOBAL;
			$blocks[3]['region'] = 'Left sidebar';
			$blocks[3]['weight'] = 0;
			$blocks[3]['status'] = TRUE;
			$blocks[3]['pages'] = "schedule\nschedule/*";
			
			$blocks[4]['info'] = t('Schedule Manage Menu');
			$blocks[4]['cache'] = BLOCK_CACHE_GLOBAL;
			$blocks[4]['region'] = 'Left sidebar';
			$blocks[4]['weight'] = 0;
			$blocks[4]['status'] = TRUE;

			$blocks[5]['info'] = t('Schedule Register Button');
			$blocks[5]['cache'] = BLOCK_CACHE_GLOBAL;

			return $blocks;			
			break;
			
		case 'view':
			$block=array();
			switch($delta){
				case 0:
					if(arg(0) == 'schedule'){
						$yrq = arg(1);
					}
					if(arg(0) == 'node' ){
						$nid = arg(1);
						$node = node_load($nid);
						$yrq = $node->field_fs_yrq[0]['value'];
					}
					if(!$yrq){
						$yrq = _schedule_get_current_yrq();
					}
					$block['subject']=_schedule_yrq_to_quarter($yrq).' Dates';
					$block['content']=_build_quarter_detail_block_content($yrq);
					return $block;
				case 1:
					if(arg(0) == 'schedule'){
						$yrq = arg(1);
					}
					if(arg(0) == 'node' ){
						$nid = arg(1);
						$node = node_load($nid);
						$yrq = $node->field_fs_yrq[0]['value'];
					}
					if(!$yrq){
						$yrq = _schedule_get_current_yrq();
					}
					$block['content']=_build_quarter_selector_block_content($yrq);
					return $block;
				case 2:
					$block['content']=_build_tag_key_block_content();
					return $block;
				case 3:
					if(arg(0) == 'schedule'){
						$yrq = arg(1);
					}
					if(arg(0) == 'node' ){
						$nid = arg(1);
						$node = node_load($nid);
						$yrq = $node->field_fs_yrq[0]['value'];
					}
					if(!$yrq){
						$yrq = _schedule_get_current_yrq();
					}
					$active = arg(2);
					$block['content']=_build_schedule_menu_block_content($yrq,$active);
					return $block;
				case 4:
					$block['content']=_schedule_manage_menu_block();
					return $block;
				case 5:
					drupal_add_css(drupal_get_path('module', 'nscc_schedule') . '/nscc_schedule.reg_block.css');
					$block['content'] = '<a class="register-button" href="http://mynorth.seattlecolleges.edu/">MyNorth (Mobile Registration)</a>';
					//$block['content'] .= '<a class="register-button" href="https://wts.seattlecolleges.edu/seanor/webreg/waci221.html" target="nscc-register-window">Registration Classic (&trade;)</a>';
					return $block;		
			}
			

	}

}

function _build_quarter_selector_block_content($yrq){
	switch(substr($yrq,3,1)){
		case '1':
			$season_class = 'summer-season-title';
			break;
		case '2':
			$season_class = 'fall-season-title';
			break;
		case '3':
			$season_class = 'winter-season-title';
			break;
		case '4':			
			$season_class = 'spring-season-title';
			break;
	}

// <prevquartertitle current quarter title nextquartertitle>
	$target_quarter_title = _schedule_yrq_to_quarter($yrq);
	$prev_quarter = _schedule_get_prev_yrq($yrq);
	$prev_quarter_url = preg_replace("/$yrq/",$prev_quarter,drupal_get_path_alias($_GET['q']));
	if($prev_quarter_url=='schedule'){
		$prev_quarter_url = 'schedule/'.$prev_quarter;
	}	
	//$prev_quarter_url = preg_replace("/search\/.*/",'',$prev_quarter_url);
	$prev_quarter_title = _schedule_yrq_to_quarter($prev_quarter);
	$next_quarter = _schedule_get_next_yrq($yrq);
	$next_quarter_url = preg_replace("/$yrq/",$next_quarter,drupal_get_path_alias($_GET['q']));
	if($next_quarter_url=='schedule'){
		$next_quarter_url = 'schedule/'.$next_quarter;
	}	
	//$next_quarter_url = preg_replace("/search\/.*/",'',$next_quarter_url);
	$next_quarter_title = _schedule_yrq_to_quarter($next_quarter);
	$quarter_details = _schedule_get_quarter_details($yrq);

	

	$output .='<!-- SwishCommand noindex --><div class="prev-quarter-button grid-2 alpha"><!-- SwishCommand noindex -->';
	if ($prev_quarter){
		$output .='<a title="Previous Quarter" href="/'.$prev_quarter_url.'">'.$prev_quarter_title.'</a>';
	} else {
		$output .= '&nbsp;';
	}
	$output .='</div>';
	$output .='<div class="current-quarter-title grid-5 '.$season_class.'"><h1>'.$target_quarter_title.' Class Schedule</h1></div>';
	$output .='<div class="next-quarter-button grid-2 omega">';
	if ($next_quarter){
		$output .='<a title="Next Quarter" href="/'.$next_quarter_url.'">'.$next_quarter_title.'</a>';
	} else {
		$output .='&nbsp;';
	}
	$output .='</div>';
	$output .='<div class="clearfix">&nbsp;</div>';
	$output .='<p class="quarter-blurb">'.$quarter_details->blurb.'</p><!-- SwishCommand index -->';
	return $output;
}

function _build_quarter_detail_block_content($yrq){
	
	//Luv Temporary change
	//$yrq = _schedule_get_current_yrq();
	$yrq = 'B673';
	
	$qtr_events = _schedule_get_quarter_events($yrq);
	$quarter_details = _schedule_get_quarter_details($yrq);
	$qtr_start = _schedule_hpdate_to_date($quarter_details->first_day_yrq);
	$qtr_end = _schedule_hpdate_to_date($quarter_details->last_day_yrq);
	$qtr_events = array();
	$qtr_events = _schedule_get_quarter_events($yrq);
  
  
	$output .= "  <div class=\"quarter-details\">\n";
	//$output .= "    <div id=\"quarter-blurb\">{$quarter_details->blurb}</div>\n";
	$output .= "    <div class=\"quarter-dates\">\n";
  
  	// If no events available, just output the start and end dates.
  	if (! $qtr_events) {
  		$output .= "      <div class=\"quarter-event\"><div class=\"event-date\">". date('M j, Y', $qtr_start) . "</div><div class=\"event-detail\">First Day of Quarter</div></div>\n";
		  $output .= "      <div class=\"quarter-event\"><div class=\"event-date\">". date('M j, Y',$qtr_end). "</div><div class=\"event-detail\">Last Day of Quarter</div></div>\n";
	  } else {
			foreach($qtr_events as $event) {
				if($event['dtstart'] >= time()){
					$output .= "      <div class=\"quarter-event\"><div class=\"event-date\">" . date('M j, Y', $event['dtstart']) . "</div><div class=\"event-detail\">";
				
					// Title should link to more info if event has URL.
					if(isset($event['url']) && ! empty($event['url'])){
						$output .= '<a href="' . $event['url'] . '">' . $event['summary'] . '</a>';
					} elseif (isset($event['attach']) && ! empty($event['attach'])) {
						$output .= '<a href="' . $event['attach'] . '">' . $event['summary'] . '</a>';
					} else {
						$output .=  $event['summary'];
					}
					if (isset($event['description']) && $event['description'] ) { $output .= ' &#151; ' . $event['description']; }
					$output .= "</div></div>\n";
					}
				}
  	}
  	$output .= "    </div><!-- end quarter-dates -->\n";

	// Add link to Academic Calendar viewer
	$output .= "    <div class=\"note\">\n";
	$output .= "      <p>Other important dates &amp; deadlines are available from the <a href=\"http://calendar.northseattle.edu\">College Calendar</a></p>\n";
	$output .= "      <p><a href=\"http://seattlecolleges.edu/district/calendar/calendar2016-17.aspx\">2016-17 Academic Calendar</a></p>\n";
	$output .= "    </div>\n";
	$output .= " </div>\n";
	return $output;
}

function _build_tag_key_block_content(){
	
	$output = "<div class=\"schedule-tag-key\"><ul>\n";
	$output .= "\t<li><span class=\"schedule-tag-button\">Desc</span> <span class=\"schedule-tag-name\">Description</span></li>\n";
	$output .= "\t<li><span class=\"schedule-tag-button\">N</span> <span class=\"schedule-tag-name\">Night Class</span></li>\n";
	$output .= "\t<li><span class=\"schedule-tag-button\">Dates</span> <span class=\"schedule-tag-name\">Non-Standard Meeting Dates</span></li>\n";
	$output .= "\t<li><span class=\"schedule-tag-button\">X</span> <span class=\"schedule-tag-name\">Class Cancelled</span></li>\n";
	$output .= "\t<li><span class=\"schedule-tag-button\">PERM</span> <span class=\"schedule-tag-name\">Permission Required</span></li>\n";
	$output .= "\t<li><span class=\"schedule-tag-button\">RD</span> <span class=\"schedule-tag-name\">Registration Forbidden</span></li>\n";
	$output .= "\t<li><span class=\"schedule-tag-button\">WWW</span> <span class=\"schedule-tag-name\">Class Web Site</span></li>\n";
	$output .= "\t<li><span class=\"schedule-tag-button\">CE</span> <span class=\"schedule-tag-name\">Community Education</span></li>\n";
	$output .= "\t<li><span class=\"schedule-tag-button\">CCN</span> <span class=\"schedule-tag-name\">Common Course Number</span></li>\n";
	$output .= "\t<li><span class=\"schedule-tag-button\">eL</span> <span class=\"schedule-tag-name\">ELearning/Distance</span></li>\n";
	$output .= "\t<li><span class=\"schedule-tag-button\">eL/OC</span> <span class=\"schedule-tag-name\">Elearning/On Campus</span></li>\n";
	$output .= "\t<li><span class=\"schedule-tag-button\">SP</span> <span class=\"schedule-tag-name\">Self Paced</span></li>\n";
	$output .= "\t<li><span class=\"schedule-tag-button\">IS</span> <span class=\"schedule-tag-name\">Integrated Studies</span></li>\n";
	$output .= "\t<li><span class=\"schedule-tag-button\">CS</span> <span class=\"schedule-tag-name\">Coordinated Studies</span></li>\n";
	$output .= "\t<li><span class=\"schedule-tag-button\">LC</span> <span class=\"schedule-tag-name\">Linked Class</span></li>\n";
	$output .= "\t<li><span class=\"schedule-tag-button\">STAFF</span> <span class=\"schedule-tag-name\">Instructor not yet assigned</span></li>\n";

	_checkadd_schedule_db();
	db_set_active('class_schedule');
	$sql='SELECT tag_id,tag_abbr,tag_name from schedule.tag_details order by tag_name;';
	$result = db_query($sql);
	while($record = db_fetch_object($result)){
		$output .= "\t<li><span class=\"schedule-tag-button\">".$record->tag_abbr."</span> <span class=\"schedule-tag-name\">".$record->tag_name."</span></li>\n";
	}
	$sql='SELECT tag_id,tag_abbr,tag_name from schedule.course_tag_details order by tag_name;';
	$result = db_query($sql);
	while($record = db_fetch_object($result)){
		$output .= "\t<li><span class=\"schedule-tag-button\">".$record->tag_abbr."</span> <span class=\"schedule-tag-name\">".$record->tag_name."</span></li>\n";
	}
	db_set_active('default');

	$output .= "\t<li><span class=\"schedule-tag-button\">\$…</span> <span class=\"schedule-tag-name\">Additional fee required</span></li>\n";
	$output .= "</ul><p>Class-specific info is available by expanding the attributes list for that class.</p></div>\n";

	return $output;

}


function _build_schedule_menu_block_content($yrq,$active){
	switch($active){
		case 'dept':
			$deptactive = 'active';
		break;
		case 'instructor':
		  $instructoractive = 'active';
		break;
		case 'course':
		  $courseactive = 'active';
		break;
		case 'alternative':
		  $altactive = 'active';
		break;
		case 'IS':
		  $isactive = 'active';
		break;
		default:
			if( preg_match('/finals/',drupal_get_path_alias($_GET['q'])) ){
				$finalsactive = 'active';
			} else {
				$searchactive = 'active';
			}
	}
	$lastclass=' last';
	
	//Luv Temporary change
	//$yrq = _schedule_get_current_yrq();
	$yrq = 'B674';
	
	$finals_list_item='';
	if(drupal_lookup_path('source','schedule/'.$yrq.'/finals')){
		$lastclass='';
		$finals_list_item .="<li class=\"leaf last\"><a href=\"/schedule/".$yrq."/finals\" class=\"".$finalsactive."\">Finals Schedule</a></li>\n";
	}
	$output = "<div class=\"schedule-menu\"><ul class=\"menu\">\n";
	$output .="<li class=\"leaf first\"><a href=\"/schedule/".$yrq."\" class=\"".$searchactive."\">Class Search</a></li>\n";
	$output .="<li class=\"leaf\"><a href=\"/schedule/".$yrq."/dept\" class=\"".$deptactive."\">Departments</a></li>\n";
	$output .="<li class=\"leaf\"><a href=\"/schedule/".$yrq."/instructor\" class=\"".$instructoractive."\">Instructors</a></li>\n";
	$output .="<li class=\"leaf\"><a href=\"/schedule/".$yrq."/course\" class=\"".$courseactive."\">Courses</a></li>\n";
	$output .="<li class=\"leaf\"><a href=\"/schedule/".$yrq."/IS\" class=\"".$isactive."\">Integrated Studies</a></li>\n";
	$output .="<li class=\"leaf$lastclass\"><a href=\"/schedule/".$yrq."/alternative\" class=\"".$altactive."\">Alternative Learning</a></li>\n";
	//$output .= $finals_list_item;
	$output .="<li class=\"leaf$lastclass\"><a href=\"/schedule/B782/finals\" class=\""."\">Finals Schedule</a></li>\n";
	$output .= "<li></li>";
	$output .="<li class=\"leaf$lastclass\"><a href=\"/schedule/B781/finals\" class=\""."\">Finals Summer 2017 Schedule</a></li>\n";
	$output .="</ul></div>\n";
	
	
	
	
	//Luv Temporary change
	
	return $output;
}


function _schedule_manage_menu_block(){
	$mtree_pdata = menu_tree_page_data();
	foreach ($mtree_pdata as $menu_item) {
		if ($menu_item['link']['router_path'] != 'manage') { continue; }
		foreach ($menu_item['below'] as $key => $val) {
			$link = $val['link'];
			if ($link['router_path'] != 'manage/schedule') {continue;}
			foreach($val['below'] as $subkey=>$subval){
				$sublink = $subval['link'];
				if($sublink['type'] == MENU_NORMAL_ITEM){	
					$menu_links[] = l($sublink['title'], $sublink['link_path'], $sublink['options']);
				}	
				
			}
		}
	}
	$first = true;
	$count = count($menu_links);
	$index = 0;
	foreach($menu_links as $menu_link){
		$li_classes = 'leaf ';
		if($first){
			$li_classes .='first ';
			$first = false;
		}
		if ($index==$count-1){
			$li_classes = 'last ';
		}
		$menu_list .= '	 <li class="'.$li_classes.'">'.$menu_link."</li>\n";
		$index++;
	}

	return '<div class="block block-menu"><ul class="menu">' . $menu_list . '</ul></div>';
}


function nscc_schedule_cron(){
	$clear_save_queries_sql = "DELETE FROM {nscc_schedule_saved_queries} AS nssq WHERE nssq.saved_date <%d and query_name is null;";
	$yesterday = time() - (60*60*24);
	$result = db_query($clear_save_queries_sql,$yesterday);
	return true;
}



function _checkadd_schedule_db() {

	global $db_url;

	// If current $db_url is not an array make it one (and don't forget to insert the default connection)
	if (!is_array($db_url)) {
		$default = $db_url;
		$db_url = array();
		$db_url['default'] = $default;
	}

  // Add the new reference
	if(!$db_url['class_schedule']){
		$db_url['class_schedule'] = 'pgsql://schedule_viewer:ty87rcg5@onering.inf/nscc';
	}
}

function _checkadd_schedule_edit_db(){

	global $db_url;

	// If current $db_url is not an array make it one (and don't forget to insert the default connection)
	if (!is_array($db_url)) {
		$default = $db_url;
		$db_url = array();
		$db_url['default'] = $default;
	}

  // Add the new reference
	if(!$db_url['schedule_edit']){
		$db_url['schedule_edit'] = 'pgsql://schedule_writer:y4n2v5qbh755@onering.inf/nscc';
	}
}


function _schedule_get_quarter_details($yrq){
	_checkadd_schedule_db();
	db_set_active('class_schedule');
	$quarter_detail_array = array();

	$sql='SELECT  * from schedule.yrq_details where yrq=\'%s\';';
	$result = db_query($sql,$yrq);
	$quarter_details=db_fetch_object($result);
	db_set_active('default');
	return $quarter_details;
}



function _schedule_get_current_yrq(){
	_checkadd_schedule_db();
	db_set_active('class_schedule');
	$date_now = date('Ymd');
	$sql = 'select yrq from schedule.yrq_details where last_day_yrq>=%s and published=true order by yrq asc limit 1;';
	$result = db_query($sql,$date_now);
	while($record=db_fetch_object($result)){
		$yrq = $record->yrq;
	}
	db_set_active('default');
	return $yrq;
}

function _schedule_get_next_starting_yrq($all=false){
	_checkadd_schedule_db();
	db_set_active('class_schedule');
	$date_now = date('Ymd');
	if($all){	
		$sql = 'select yrq from schedule.yrq_details where first_day_yrq>=%s order by yrq asc limit 1;';
	} else {	
		$sql = 'select yrq from schedule.yrq_details where first_day_yrq>=%s and published=true order by yrq asc limit 1;';
	}
	$result = db_query($sql,$date_now);
	while($record=db_fetch_object($result)){
		$yrq = $record->yrq;
	}
	db_set_active('default');
	return $yrq;
}

function _schedule_get_next_yrq($yrq,$all = false){
	_checkadd_schedule_db();
	db_set_active('class_schedule');
	if(! $all){
		$sql = 'Select yrq from schedule.yrq_details where yrq>\'%s\' and published=true order by yrq asc limit 1;';
	} else {
		$sql = 'Select yrq from schedule.yrq_details where yrq>\'%s\' order by yrq asc limit 1;';
	}
	$result = db_query($sql,$yrq);
	while($record=db_fetch_object($result)){
		$next_yrq = $record->yrq;
	}
	db_set_active('default');
	if($next_yrq){
		return $next_yrq;
	} else {
		return false;
	}
}

function _schedule_get_prev_yrq($yrq,$all = false){
	_checkadd_schedule_db();
	db_set_active('class_schedule');
	if(! $all){
		$sql = 'Select yrq from schedule.yrq_details where yrq<\'%s\' and published=true order by yrq desc limit 1;';
	} else {
		$sql = 'Select yrq from schedule.yrq_details where yrq>\'%s\' order by yrq desc limit 1;';
	}
	$result = db_query($sql,$yrq);
	while($record=db_fetch_object($result)){
		$prev_yrq = $record->yrq;
	}
	db_set_active('default');
	if($prev_yrq){
		return $prev_yrq;
	} else {
		return false;
	}
}

function _schedule_get_active_yrqs(){
	$output_array = array();
	_checkadd_schedule_db();
	db_set_active('class_schedule');
	$date_now = date('Ymd');
	$sql = 'select yrq,abbr_title from schedule.yrq_details where last_day_yrq>=%s and published=true order by yrq asc';
	$result = db_query($sql,$date_now);
	while($record=db_fetch_object($result)){
		$output_array[$record->yrq]=preg_replace( '/ (\d\d)\s+$/',' 20$1',ucwords(strtolower(" {$record->abbr_title} ")) );
	}
	db_set_active('default');
	return $output_array;
}




function _schedule_yrq_to_quarter($yrq){
  _checkadd_schedule_db();
  $quarter_details = _schedule_get_quarter_details(strtoupper($yrq));
  if($quarter_details->yrq >= 'A001'){
    $output = preg_replace( '/ (\d\d)\s+$/',' 20$1',ucwords(strtolower(" {$quarter_details->abbr_title} ")) )." ";
  } else {
    $output = preg_replace( '/ (\d\d)\s+$/',' 19$1',ucwords(strtolower(" {$quarter_details->abbr_title} ")) )." ";
  } 
  return $output;	
}

function _schedule_hpdate_to_date($hpdate){
	$datestr = str_pad($hpdate,8,'200',STR_PAD_LEFT);
	$datestr = preg_replace('/^(\d\d\d\d)(\d\d)(\d\d)$/','$3-$2-$1',$datestr);
	$date = strtotime($datestr);
	return $date;
}

function _schedule_get_quarter_events($yrq) {
	if (! $yrq ) { return false; }
	$related_events=array();
	$all_events = _schedule_ical_to_array(variable_get('nscc_schedule_calendar_url',null));
 	
 	$index=0;
 	foreach($all_events as $index=>$current_event){
 		if(preg_match("/$yrq/i",$current_event['categories'])){
 			$related_events[$index] = $current_event;
		}
		$index++;
 	}
	
	usort($related_events,"_schedule_cmp_event_starts"); 
 	return($related_events);
}

function _schedule_cmp_event_starts($a,$b){
	if ($a['dtstart'] == $b['dtstart']){
		return 0;
	}
	return ($a['dtstart'] < $b['dtstart']) ? -1 : 1;
}

//does math, and returns the next yrq.
function _schedule_increment_yrq($yrq){
   if (! preg_match('/[A-Z]\d{3}/', $yrq)) { return false;}

   $yrq = str_split($yrq);
   if ($yrq[3] >= 4) {
     $yrq[3] = 1;
     switch($yrq[2]) {
       case 0:
         $yrq[2] = 1;
         $yrq[1] = 0;
         //Retired by then:
         switch($yrq[0]) {
           case 'A':
             $yrq[0] = 'B';
             break;
           case 'B':
             $yrq[0] = 'C';
             break;
           case 'C':
             $yrq[0] = 'D';
             break;
           case 'D':
             $yrq[0] = 'E';
             break;
           case 'E':
             $yrq[0] = 'F';
             break;
         }
         break;
       case 9:
         $yrq[2] = 0;
         $yrq[1]++;
         break;
       default:
         $yrq[2]++;
         $yrq[1]++;
     }
   
   } else { 
   		$yrq[3]++;
   }

   return implode('', $yrq);
 }

function _schedule_get_courses_matching_tag($tag=null,$yrq = null){
  if(!$tag){
    return t('You must specify a Course Tag');
  }
  if(!$yrq){
    $yrq = _schedule_get_current_yrq();
  }
  $courses=array();
  _checkadd_schedule_db();
  db_set_active('class_schedule');
  $sql = "SELECT DISTINCT ct.course_id AS course FROM schedule.course_tags AS ct JOIN schedule.course_tag_details AS ctd USING (tag_id) WHERE ctd.tag_abbr='%s' AND ct.yrq='%s' ORDER BY ct.course_id;";
  $result = db_query($sql,$tag,$yrq);
  while($record = db_fetch_object($result)){
    $courses[] = $record->course;
  }
  db_set_active('default');
  return $courses;
}


//converts ical file to an array of events.
function _schedule_ical_to_array($calendar_url){

  $raw_events = array();
  $events = array();

  //$calendar_contents = file_get_contents($calendar_url);
  //temp change by Luv https://resources.northseattle.edu/sites/northseattle.edu/files/Academic.ics
  $calendar_contents = file_get_contents("https://resources.northseattle.edu/sites/northseattle.edu/files/Academic.ics");
  if(!$calendar_contents) { return false;}
  
  preg_match_all('/BEGIN:VEVENT.*END:VEVENT/sU',$calendar_contents,$raw_events);

	foreach($raw_events[0] as $index=>$event_text){
		$dtstart='';
		$dtend='';
		$summary='';
		$description='';
		$location='';
		$categories='';
		$url = '';
		
		//first unfold long lines:
		$event_text = preg_replace('/\r\n /','',$event_text);
		
		preg_match('/\r\nDTSTART.*:(.*)\r\n/',$event_text,$matches);
		if(isset($matches[1])){
		$dtstart = strtotime(preg_replace('/T/',', ',$matches[1]));
		}
		
		preg_match('/\r\nDTEND.*:(.*)\r\n/',$event_text,$matches);
		if(isset($matches[1])){
		$dtend = strtotime(preg_replace('/T/',', ',$matches[1]));
		}
		
		preg_match('/\r\nSUMMARY:(.*)\r\n/',$event_text,$matches);
		if(isset($matches[1])){
		$summary = stripslashes($matches[1]);
		}
		
		preg_match('/\r\nDESCRIPTION:(.*)\r\n/',$event_text,$matches);
		if(isset($matches[1])){
			$description = stripslashes($matches[1]);
		}
		
		preg_match('/\r\nLOCATION:(.*)\r\n/',$event_text,$matches);
		if(isset($matches[1])){
			$location = stripslashes($matches[1]);
		}
		
		preg_match('/\r\nCATEGORIES:(.*)\r\n/',$event_text,$matches);
		if(isset($matches[1])){
			$categories = stripslashes($matches[1]);
		}
		preg_match('/\r\nURL:(.*)\r\n/', $event_text, $matches);
		if (isset($matches[1])) {
		  $url = $matches[1];
		}
		
		$events[$index] = array( 'dtstart'=>$dtstart,
								 'dtend'=>$dtend,	
								 'summary'=>$summary,
								 'description'=>$description,
								 'categories'=>$categories,
								 'location'=>$location,
								 'url' => $url
								 );
	}

  return $events;

}

function nscc_schedule_preprocess(&$variables){
	if(preg_match('/^\/schedule/',$_SERVER["REQUEST_URI"])){
		$variables['title'] = '';
//		drupal_add_js('libraries/js/tooltip-1.1.3.min.js', 'module');
	}
}



/**
* Implementation of hook_service()
*/
function nscc_schedule_service() {
  return array(
    // echo.echo
    array(
      '#method'   => 'schedule.echo',
      '#callback' => '_nscc_schedule_echo',
      //'#auth'     => false,
      '#access arguments' => array('access comments'),
      '#return'   => 'struct',
      '#args'     => array(
        array(
          '#name'         => 'message',
          '#type'         => 'string',
          '#description'  => t('The message to return.'),
        )),
      '#help'     => t('Returns an object containing a sessid and user.'))
      
  );
}

function _nscc_schedule_echo($message) {
  
  $return = new stdClass();
  $return->sessid = session_id();
  $return->message = $message;
  
  return $return;
}


/**
 *	Utility for custom decoding of ampersand char in course titles
 *
 *	Moved from nscc_schedule.pages.inc so it was available to
 *	page title callback for cleanup of course number in page title.
 */
function _nscc_schedule_ds_decode($cipher){
	$plain = preg_replace('/@@@/','&',$cipher);
	return $plain;
}


/**
 *	Utility for custom encoding of ampersand char in course titles
 *
 *	Moved from nscc_schedule.pages.inc to parallel decode utility.
 */
function _nscc_schedule_ds_encode($plain) {
	$cipher = preg_replace('/&/','@@@',$plain);
	return $cipher;
}

