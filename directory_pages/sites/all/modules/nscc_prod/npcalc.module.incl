<?php

/**
 *		@file npcalc.module.incl
 *
 *		This file contains the processing and output logic for the DOE Net Price
 *		Calculator. It is included by the module's menu callback as needed.
 */

define('NPCALC_DATA_YEAR', '2011-2012');


// Bring data-retrieval function in scope.
require_once(drupal_get_path('module', 'nscc_prod') . '/npcalcdatainclude.php');




/**
 *		Generate NPC page
 *
 *		Registered via module's HOOK_menu function and called by core's Menu Router.
 */
function npcalc_page() {

	drupal_add_css(drupal_get_path('module', 'nscc_prod') . '/npcalc.css');
	drupal_add_js(drupal_get_path('module','nscc_prod') . '/npcalc.js');

	$out[] = drupal_get_form('npcalc_form');
	return implode("\n", $out);
}




/**
 *		Form Definition
 *
 *		@return array The form
 */
function npcalc_form(&$form_state=null) {

	// Required indicator
	$form['required-indicator'] = array(
		'#prefix' => '<p>',
		'#suffix' => '</p>',
		'#value' => t('Required items are marked !req-mark', array('!req-mark' => '<span title="This field is required." class="form-required">*</span>')),
	);


	// Caveat
	if ( $notice = _npcalc_get_preamble() ) {
		$form['preamble'] = array(
			'#type' => 'fieldset',
			'#title' => t('Important Notice'),
			//'#collapsible' => true,
		);
		$form['preamble']['caveat'] = array(
			'#prefix' => '<div id="npcalc-notice">',
			'#value' => $notice,
			'#suffix' => '</div>',
		);
		$form['preamble']['caveat_ack'] = array(
			'#type' => 'checkbox',
			'#title' => t('Yes, I understand this is only a rough estimate.'),
			'#required' => true,
			'#default_value'=>$form_state['values']['caveat_ack'],
		);
	}


	// Student data
	$form['student'] = array(
		'#type' => 'fieldset',
		'#title' => t('Student Info'),
		'#description' => t('This information is used to determine estimated costs associated with attending NSCC.'),
		//'#collapsible' => true,
	);
	$form['student']['age'] = array(
		'#type' => 'textfield',
		'#title' => t('Age'),
		'#description' => t('Please provide student\'s age. This is one of the factors that may affect dependency-status, which is used to estimate costs.'),
		'#required' => true,
		'#size' => 3,
		'#maxlength' => 3,
		'#default_value'=>$form_state['values']['age'],
	);
	$form['student']['domicile'] = array(
		'#type' => 'radios',
		'#title' => t('Living arrangements while attending NSCC'),
		'#required' => true,
		'#options' => array(
			'parents' => t('Living with my parents or other family members'),
			'self' => t('Living on my own or with a roommate'),
		),
		'#default_value' => $form_state['values']['domicile'],
	);
	$form['student']['residency'] = array(
		'#type' => 'checkbox',
		'#title' => t('Student is eligible for in-state tuition'),
		'#description' => t('Mark this box if student is a Washington resident and qualifies for in-state tuition rates. Otherwise, leave it empty. See !residency-link for information about how to determine student\'s status.', array('!residency-link'=>'<a href="/glossary/residency">Residency</a>')),
		'#default_value' => $form_state['values']['residency'],
	);
	$form['student']['finaid'] = array(
		'#type' => 'checkbox',
		'#title' => t('Student will apply for financial aid'),
		'#description' => t('Mark this box if student plans to request financial aid. Otherwise, leave it empty. Financial aid helps defray costs associated with attending college. See !finaid-link for details about aid types, qualifications, and how to apply.', array('!finaid-link'=>'<a href="/financial-aid">Financial Aid</a>')),
		'#default_value' => $form_state['values']['finaid'],
	);


	// Family data
	$form['family'] = array(
		'#type' => 'fieldset',
		'#title' => t('Family Information'),
		'#description' => t('This information is used to estimate additional expenses that may affect need-based financial aid eligibility and amounts.'),
		//'#collapsible' => true,
	);
	$form['family']['married'] = array(
		'#type' => 'checkbox',
		'#title' => t('Student is married'),
		'#description' => t('Mark this box if student: is/will be married or is/will be separated (but not divorced) while attending NSCC. Otherwise, leave it empty.'),
		'#default_value' => $form_state['values']['married'],
	);
	$form['family']['family-size'] = array(
		'#type' => 'textfield',
		'#title' => t('Family size'),
		'#description' => t('Please provide the number of family members in the student\'s household. Include the student, spouse or parents, and siblings who are less than 24 years old.'),
		'#required' => true,
		'#size' => 2,
		'#maxlength' => 2,
		'#default_value' => $form_state['values']['family-size'],
	);
	$form['family']['children'] = array(
		'#type' => 'textfield',
		'#title' => t('Student\'s children'),
		'#description' => t('For how many children does the student provide primary financial support? Enter 0 or leave this empty if student does not financially support any children.'),
		'#size' => 2,
		'#maxlength' => 2,
		'#default_value' => $form_state['values']['children'],
	);
	$form['family']['in-college'] = array(
		'#type' => 'textfield',
		'#title' => t('College students'),
		'#description' => t('How many members of student\'s family will be enrolled in college next year? Include student, spouse, siblings, and student\'s children who are less than 24 years old. Do not include parents.'),
		'#size' => 2,
		'#maxlength' => 2,
		'#default_value' => $form_state['values']['in-college'],
	);


	// Household income
	$form['income'] = array(
		'#type' => 'fieldset',
		'#title' => t('Household income'),
		'#description' => t('This information is used to estimate factors affecting Expected Family Contribution (EFC) and need-based financial aid eligibility and amounts.'),
		//'#collapsible' => true,
	);
	$form['income']['household-income'] = array(
		'#type' => 'select',
		'#title' => t('What is the total income of student\'s household?'),
		'#description' => t('Include all income (salary, wages, tips, unemployment, child support, alimony, etc.) for all family members residing in the same household as student.'),
		'#required' => true,
		'#multiple' => false,
		'#options' => _npcalc_get_income_ranges(),
		'#default_value' => $form_state['values']['household-income'],
	);

	// Form controls
	$form['submit'] = array(
		'#type' => 'submit',
		'#value' => t('Submit'),
	);

	return $form;
}




/**
 *		FORM_validate()
 */
function npcalc_form_validate($form, &$form_state) {

	// Data available?
	if (! function_exists('_nscc_ncalc_get_data')) {
		form_set_error('caveat', t('Cannot provide estimate now. Calculation tables are unavailable.'));
	}
	
	// Reasonable field values?
	if (! preg_match('/^[1-9]\d*/', trim($form_state['values']['age']))) {
		form_set_error('age', t('Please provide a valid age.'));
	}
	if (! preg_match('/^[1-9]\d*/', trim($form_state['values']['family-size']))) {
		form_set_error('family-size', t('Please provide a valid family size.'));
	}
	if (! empty($form_state['values']['children'])) {
		if (! preg_match('/^\d+/', $form_state['values']['children'])) {
			form_set_error('children', t('Please provide a valid number of children.'));
		}
		if (intval($form_state['values']['children']) >= intval($form_state['values']['family-size'])) {
			form_set_error('children', t('Number of children must be less than family size.'));
		}
	}
	if (! empty($form_state['values']['in-college'])) {
		if (! preg_match('/^\d+/', trim($form_state['values']['in-college']))) {
			form_set_error('in-college', t('Please provide a valid number of college students.'));
		}
		if ($form_state['values']['in-college'] > $form_state['values']['family-size']) {
			form_set_error('in-college', t('Number of college students cannot be greater than number of family members.'));
		}
	}
	if ($form_state['values']['household-income'] == '---') {
		form_set_error('household-income', t('Please select an income range.'));
	}

	//$form_state['rebuild'] = true;
}




/**
 *		FORM_submit()
 */
function npcalc_form_submit($form, &$form_state) {

	$form_values_array = $form_state['values'];
	$estimate = _nscc_ncalc_estimate($form_values_array);
	if($estimate['return_code']){
		drupal_set_message($estimate['html-payload'], 'notice');
	} else {
		drupal_set_message($estimate['error_msg'], 'error');
	}

	$form_state['rebuild'] = true;
	return;
}




/**
 *		Ajax submit handler
 *
 *		This is a stub. It is not currently in use.
 */
function npcalc_ajax_submit(){

	$estimate = _nscc_ncalc_estimate($_POST);	
	if ($estimate['return_code']) {
		$json_array['returnCode'] = true;
		$json_array['htmlPayload'] = $estimate['html-payload'];
	} else {
		$json_array['returnCode'] = false;
		$json_array['errorMsg'] = $estimate['error_msg'];
	}

	print drupal_json($json_array);
	exit();	
}




/**
 *		Estimator logic
 */
function _nscc_ncalc_estimate($input_array) {

	$doe_data = _nscc_ncalc_get_data();
	$dependent = ($input_array['age'] < 24 && empty($input_array['married']) && empty($input_array['children'])) ? true : false;
	
	
	// Adjust family size to coincide w/ dataset thresholds.
	switch (true) {
		case ($input_array['family-size'] > 6) :
			$input_array['family-size'] = 6;
			break;
		case ($dependent && $input_array['family-size'] < 2) :
			$input_array['family-size'] = 2;
			break;
		case (!$dependent && $input_array['family-size'] < 1) :
			$input_array['family-size'] = 1 + (int)$input_array['married'] + (int)$input_array['children'];
			break;
	}
	
	// Adjust in-college count to coincide w/ dataset thresholds.
	switch (true) {
		case ($input_array['in-college'] < 1) :
			$input_array['in-college'] = 1;
			break;
		case ($dependent && $input_array['in-college'] > 3) :
			$input_array['in-college'] = 3;
			break;
		case (!$dependent && $input_array['in-college'] > 2) :
			$input_array['in-college'] = 2;
			break;
	}

	// Determine Estimated Family Contribution (EFC)
	switch (true) {
		case ($dependent) :
			$efc_dataset = 'efcDependent';
			break;
		case ($input_array['children'] > 0) :
			$efc_dataset = 'efcIndWithDep';
			break;
		default :
			$efc_dataset = 'efcIndWithoutDep';
	}
	foreach ($doe_data->{$efc_dataset} as $dataset) {
		if ( ($dataset->numberInCollege == $input_array['in-college']) && ($dataset->numberInFamily == $input_array['family-size']) ) {
			$ir_id = $input_array['household-income'];
			$efc = $dataset->incomeRanges[$ir_id];
		}
	}

	// Determine lookup ordinal for POA and TGA datasets.
	switch (true) {
		case ($input_array['residency'] && $input_array['domicile'] == 'self') :
			$lookup_ordinal = 0;
			break;
		case ($input_array['residency'] && $input_array['domicile'] == 'parents') :
			$lookup_ordinal = 1;
			break;
		case (! $input_array['residency'] && $input_array['domicile'] == 'self') :
			$lookup_ordinal = 2;
			break;
		case (! $input_array['residency'] && $input_array['domicile'] == 'parents') :
			$lookup_ordinal = 3;
			break;
	}
	
	// POA labels and values
	$poa['total'] = array('label' => t('Estimated total price of attendance'), 'amount' => $doe_data->poa->total[$lookup_ordinal]);
	$poa['trf'] = array('label' => t('Estimated tuition and fees'), 'amount' => $doe_data->poa->trf[$lookup_ordinal]);
	$poa['rb'] = array('label' => t('Estimated room and board'), 'amount' => $doe_data->poa->rb[$lookup_ordinal]);
	$poa['bs'] = array('label' => t('Estimated books and supplies'), 'amount' => $doe_data->poa->bs[$lookup_ordinal]);
	$poa['o'] = array('label' => t('Estimated other expenses'), 'amount' => $doe_data->poa->o[$lookup_ordinal]);

	// TGA (Total Grant Award) value
	switch (true) {
		case (! $input_array['finaid']) :
			$tga = $doe_data->tga->nfafsa[$lookup_ordinal];
			break;
		case ($efc < 1) :
			$tga = $doe_data->tga->_0[$lookup_ordinal];
			break;
		case ($efc >= 1 && $efc <= 1000 ) :
			$tga = $doe_data->tga->_1_1000[$lookup_ordinal];
			break;
		case ($efc > 1000 && $efc <= 2500) :
			$tga = $doe_data->tga->_1001_2500[$lookup_ordinal];
			break;
		case ($efc > 2500 && $efc <= 5000) :
			$tga = $doe_data->tga->_2501_5000[$lookup_ordinal];
			break;
		case ($efc > 5000 && $efc <= 7500) :
			$tga = $doe_data->tga->_5001_7500[$lookup_ordinal];
			break;
		case ($efc > 7500 && $efc <= 10000) :
			$tga = $doe_data->tga->_7501_10000[$lookup_ordinal];
			break;
		case ($efc > 10000 && $efc <= 12500) :
			$tga = $doe_data->tga->_10001_12500[$lookup_ordinal];
			break;
		case ($efc > 12500 && $efc <= 15000) :
			$tga = $doe_data->tga->_12501_15000[$lookup_ordinal];
			break;
		case ($efc > 15000 && $efc <= 20000) :
			$tga = $doe_data->tga->_15001_20000[$lookup_ordinal];
			break;
		case ($efc > 20000 && $efc <= 30000) :
			$tga = $doe_data->tga->_20001_30000[$lookup_ordinal];
			break;
		case ($efc > 30000 && $efc <= 40000) :
			$tga = $doe_data->tga->_30001_40000[$lookup_ordinal];
			break;
		case ($efc > 40000) :
			$tga = $doe_data->tga->_40000[$lookup_ordinal];
			break;
	}

	// Return data
	$estimate['poa'] = $poa;
	$estimate['tga'] = array(
		'label' => t('Estimated total grant aid'),
		'amount' => $tga,
		'description' => t('Includes both merit and need based aid')
	);
	$np_amt = ($doe_data->poa->total[$lookup_ordinal] - $tga) >= 0 ? ($doe_data->poa->total[$lookup_ordinal] - $tga) : 0;
	$estimate['net-price'] = array(
		'label' => t('Estimated net price'),
		'amount' => $np_amt,
		'description' => t('Price of attendance minus grant aid'),
	);
	$estimate['html-payload'] = _npcalc_format_payload($estimate['poa'], $estimate['tga'], $estimate['net-price']);
	$estimate['return_code']= true;
	$estimate['error_msg'] = '';

	return $estimate;
}




/**
 *		Helper function to get the preamble caveat notice.
 *
 *		@return string HTML-formatted text if a preamble/caveat has been input, false otherwise.
 */
function _npcalc_get_preamble() {
	// Hardcoded for now. If/when input UI is available this could be retrieved from DB.
	return <<<PREAMBLE
	<p>This calculator is intended to provide <em>estimated</em> net price information (defined as estimated cost of attendance—including tuition and required fees, books and supplies, room and board (meals), and other related expenses—less estimated grant and scholarship aid) to current and prospective students and their families based on what similar students paid in a previous year.</p>
	<p>The estimate provided using this calculator does not represent a final determination, or actual award, of financial assistance, or a final net price; it is an estimate based on price of attendance and financial aid provided to students in a previous year. Price of attendance and financial aid availability change year to year. The estimates shall not be binding on the Secretary of Education, the institution of higher education, or the State. Students must complete the Free Application for Federal Student Aid (FAFSA) in order to be eligible for, and receive, an actual financial aid award that includes Federal grant, loan, or work-study assistance. For more information on applying for Federal student aid, go to <a href="http://www.fafsa.ed.gov/" >http://www.fafsa.ed.gov/</a></p>
	<p>Any information input into the Net Price Calculator is confidential. It does not store your responses or ask for personal identifying information of any kind.</p>
PREAMBLE;
}




/**
 *		Helper function to get the post-estimate disclaimer notice.
 *
 *		@return string HTML-formatted text if a disclaimer has been input, false otherwise.
 */
function _npcalc_get_disclaimer() {
	// Hardcoded for now. If/when input UI is available, this can be retrieved from DB.
	return <<<DISCLAIMER
	<h3>Important Notice</h3>
	<p>The estimates above apply to full-time, first-time degree/certificate-seeking undergraduate students only.</p>
	<p>These estimates do not represent a final determination, or actual award, of financial assistance or a final net price; they are only estimates based on price of attendance and financial aid provided to students for the year noted. Price of attendance and financial aid availability change annually. These estimates shall not be binding on the Secretary of Education, the institution of higher education, or the State of Washington.</p>
	<p>Not all students receive financial aid. In 2011-12, 54% of our full-time students enrolling for college for the first time received grant/scholarship aid. Students may also be eligible for student loans and work-study. Students must complete the Free Application for Federal Student Aid (FAFSA) in order to determine their eligibility for Federal financial aid that includes Federal grant, loan, or work-study assistance. For more information on applying for Federal student aid, go to <a href="http://www.fafsa.ed.gov/" rel="nofollow">http://www.fafsa.ed.gov/</a>. Detailed information about financial aid at North Seattle Community College is available online from the <a href="/financial-aid">Financial Aid</a> section of the NSCC Web site.</p>
	<p>These figures are estimates based on average costs and average funds. In some cases, students may receive more funds or less. Most students receive additional funds through student employment, scholarships and institutional awards.</p>
DISCLAIMER;
}




/**
 *		Helper function to get standard income ranges.
 *
 *		@return array as key-value pairs
 */
function _npcalc_get_income_ranges() {
	return array(
			'---' => t('Please select one'),
			'0' => t('$29,999 or less'),
			'1' => t('$30,000 - $39,999'),
			'2' => t('$40,000 - $49,999'),
			'3' => t('$50,000 - $59,999'),
			'4' => t('$60,000 - $69,999'),
			'5' => t('$70,000 - $79,999'),
			'6' => t('$80,000 - $89,999'),
			'7' => t('$90,000 - $99,999'),
			'8' => t('$100,000 or more'),
		);
}




/**
 *		Helper function to generate output-ready HTML from calculated values.
 *
 *		@param array POA labels, descriptions, and amounts
 *		@param array TGA label, description, and amount
 *		@param array Net price label, description, and amount
 *		@return string
 */
function _npcalc_format_payload($poa, $tga, $net_price) {

	foreach ($poa as $key => $val) {
		if ($key == 'total') { continue; }
		$poa_items[] = "<li id=\"npcalc-poa-$key\"><span class=\"label\">{$val['label']}</span> <span class=\"value\">$" . number_format($val['amount'], 2) . '</span></li>';
	}
	$payload[] = '<li id="npcalc-poa-total"><span class="label">'. $poa['total']['label'] . '</span> <span class="value">$' . number_format($poa['total']['amount'], 2) . '</span><ol>'. implode("\n\t", $poa_items) . '</ol></li>';
	$tga_desc = !empty($tga['description']) ? ' <span class="description">(' . $tga['description'] . ')</span>' : '';
	$tga_amt = '$'.number_format($tga['amount'], 2);
	$payload[] = "<li id=\"npcalc-tga\"><span class=\"label\">{$tga['label']}$tga_desc</span> <span class=\"value\">$tga_amt</span></li>";
	
	$np_desc = !empty($net_price['description']) ? ' <span class="description">(' . $net_price['description'] . ')</span>' : '' ;
	$np_amt = '$'.number_format($net_price['amount'], 2);
	$payload[] = "<li id=\"npcalc-net\"><span class=\"label\">{$net_price['label']}$np_desc</span> <span class=\"value\">$np_amt</span></li>";
	
	return '<div id="npcalc-results"><h2>Results Based on ' . NPCALC_DATA_YEAR .' Data</h2><ol>' . implode("\n", $payload) . '</ol><div class="disclaimer note">' . _npcalc_get_disclaimer() . '</div></div>';
}
