<?php
// $Id: nscc_gf_request.module,v 1.236.2.3 2009/01/12 10:09:19 goba Exp $

//hook_help
function nscc_gf_request_help($path,$arg){
	switch($path){
		case 'admin/help#nscc_gf_request':
		$output = '<p>'.t('The gf request module collects and exports gf committee requests.').'</p>'."\n";
	}
	return $output;
}

//hook_perm
function nscc_gf_request_perm(){
	return array('administer gf requests','submit gf requests');
}

//hook_menu
function nscc_gf_request_menu(){
  $items['nscc_gf_request'] = array(
    'title' => 'GF Requests',
	  'description'=> 'List General Fund funding requests',
    'page callback' => '_nscc_gf_request_list_requests',
    'access callback' => TRUE,
    'type' => MENU_NORMAL_ITEM,
  );	

  $items['nscc_gf_request_nopage'] = array(
    'title' => 'gf Requests',
	  'description'=> 'List General Fund funding requests',
    'page callback' => '_nscc_gf_request_list_requests',
    'page arguments' => array(TRUE),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );	

  $items['nscc_gf_request/%'] = array(
    'title' => 'View a gf Request',
	  'description'=> 'Views an existing General Fund Request',
    'page callback' => '_nscc_gf_request_view',
    'page arguments'=>array(1),
	  'access callback'=>TRUE,
    'type' => MENU_NORMAL_ITEM,
  );	

  $items['nscc_gf_request_nopage/%'] = array(
    'title' => 'View a gf Request',
	  'description'=> 'Views an existing General Fund Request',
    'page callback' => '_nscc_gf_request_view',
    'page arguments'=>array(1,TRUE),
	  'access callback'=>TRUE,
    'type' => MENU_CALLBACK,
  );	

  $items['nscc_gf_request/%/edit'] = array(
    'title' => 'Edit a General Fund Request',
	  'description'=> 'Edits an existing General Fund Request',
    'page callback' => 'drupal_get_form',
    'page arguments'=>array('nscc_gf_request_baserequestform',1),
	  'access callback'=>'_nscc_gf_request_edit_access_callback',
    'access arguments' => array(1),
    'type' => MENU_NORMAL_ITEM,
  );	
  $items['nscc_gf_request/%/edit_line_items'] = array(
    'title' => 'General Fund Request Edit Line Items',
	  'description'=> 'Edits Line Items for an existing General Fund Request',
    'page callback' => 'drupal_get_form',
    'page arguments'=>array('nscc_gf_request_edit_line_itemsform',1),
		'access callback'=>'_nscc_gf_request_edit_access_callback',
		'access arguments' => array(1),
    'type' => MENU_NORMAL_ITEM,
  );	
  $items['nscc_gf_request/%/line_item/%/edit'] = array(
    'title' => 'Edit a Line Item',
		'description'=> 'Edits a single existing Line Item',
    'page callback' => 'drupal_get_form',
    'page arguments'=>array('nscc_gf_request_edit_line_itemsform',1,3),
		'access callback'=>'_nscc_gf_request_edit_access_callback',
    'access arguments' => array(1),
    'type' => MENU_NORMAL_ITEM,
  );	
  $items['nscc_gf_request/%/line_item/%/delete'] = array(
    'title' => 'Delete a Line Item',
		'description'=> 'Deletes an existing Line Item',
    'page callback' => 'drupal_get_form',
    'page arguments'=>array('nscc_gf_request_delete_line_itemform',1,3),
		'access callback'=>'_nscc_gf_request_edit_access_callback',
    'access arguments' => array(1),
    'type' => MENU_NORMAL_ITEM,
  );	

  $items['nscc_gf_request/%/delete'] = array(
    'title' => 'Delete a General Fund Request',
		'description'=> 'Deletes an existing General Fund Request',
    'page callback' => 'drupal_get_form',
    'page arguments'=>array('nscc_gf_request_delete_form',1),
		'access callback'=>'_nscc_gf_request_edit_access_callback',
    'access arguments' => array(1),
    'type' => MENU_NORMAL_ITEM,
  );	
  $items['nscc_gf_request/add'] = array(
    'title' => 'Submit a General Fund Request',
		'description'=> 'Submit a funding request to the General Fund',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('nscc_gf_request_baserequestform'),
    'access arguments' => array('submit gf requests'),
    'type' => MENU_NORMAL_ITEM,
  );	

  $items['admin/settings/nscc_gf_request'] = array(
    'title' => 'NSCC General Fund Request',
		'description'=> 'Manipulate settings for the NSCC General Fund Request online submission system.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('nscc_gf_request_admin_settings'),
    'access arguments' => array('administer gf requests'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

function _nscc_gf_request_edit_access_callback($request_id){
	global $user;
	//watchdog('nscc_gf_request','access callback called with a request_id of: %request',array('%request'=>$request_id));
	if (user_access('administer gf requests')){
		return true;
	} else {
		//check deadline
		$due_date_array = variable_get('nscc_gf_request_due_date','');
		$due_date = strtotime($due_date_array['month']."/".$due_date_array['day']."/".$due_date_array['year']);
		if($due_date <= time()){
			//watchdog('nscc_gf_request','past due');
			return false;
		} else {
			if($request_id == 'add'){
				watchdog('nscc_gf_request','add request');
				return true;
			}else {
				//check 'ownership'
				$sql = 'SELECT * FROM {nscc_gf_request} WHERE request_id=%d';
				$result = db_query(db_rewrite_sql($sql),$request_id);
				//watchdog('nscc_gf_request','access callback pre query -- request_id: %request, user_uid: %uid',array('%request'=>$request_id,'%uid'=> $user->uid));				
				if($retrieved_request = db_fetch_object($result)){
					//watchdog('nscc_gf_request','access callback postquery -- request_id: %request_id, user_uid: %uid,requestor_id = %requestor',array('%request_id'=>$request_id,'%uid'=> $user->uid,'%requestor'=>$retrieved_request->requestor_uid));				
					if ($user->uid == $retrieved_request->requestor_uid){
						return true;
					}
				}
				return false;
			}
		}
	}
}

function nscc_gf_request_admin_settings(){
	$form['nscc_gf_request_year'] = array(
		'#type' => 'textfield',
		'#title'=>t('Request Year'),
		'#size'=> 4,
		'#description' => 'This is the year for which the requests will be made.',
		'#default_value'=> variable_get('nscc_gf_request_year','')
	);
	$form['nscc_gf_request_due_date'] = array(
		'#type' => 'date',
		'#title'=>t('Request Due Date'),
		'#description' => 'This is the deadline for submissions',
		'#default_value'=> variable_get('nscc_gf_request_due_date',''),				
	);
	return system_settings_form($form);
}


function _nscc_gf_request_list_requests($nopage=false){
	global $user;
	$sql = 'SELECT * FROM {nscc_gf_request} ORDER BY changed ASC;';
	$result = db_query(db_rewrite_sql($sql));
	$output = '<h2>Requests for the '.variable_get('nscc_gf_request_year','')." gf Committee</h2>\n";
	$due_date_array = variable_get('nscc_gf_request_due_date','');
	$due_date_string = $due_date_array['month'].'/'.$due_date_array['day'].'/'.$due_date_array['year'];
	$output .="<div>Request Deadline: <b>$due_date_string</b></div>\n<hr>\n";
	$output .= "<table>\n";
	$output .= "\t<tr>";
	$output .= "<td>Request #</td>";
	$output .= "<td>Requestor</td>";
	$output .= "<td>Submitted</td>";
	$output .= "<td>Location/Department</td>";
	$output .= "<td colspan=\"2\">Description</td>";
	$output .= "</tr>\n";
	while($current_request = db_fetch_object($result)){
		$output .= "\t<tr>";
		$output .= "<td>{$current_request->request_id}</td>";
		$output .= "<td>{$current_request->requestor_name}</td>";
		$output .= "<td>".date('M j, Y H:i:s',$current_request->changed)."</td>";
		$output .= "<td>{$current_request->request_title}</td>";
		if($user->uid == $current_request->requestor_uid || user_access('administer gf requests')){
			$output .= "<td>".substr($current_request->description,0,15)."...</td>";
			$output .= "<td><a href=\"/nscc_gf_request/{$current_request->request_id}\">[view]</a><a href=\"/nscc_gf_request/{$current_request->request_id}/edit\">[edit]</a> <a href=\"/nscc_gf_request/{$current_request->request_id}/delete\">[delete]</a></td>";
		} else {
			$output .= "<td>".substr($current_request->description,0,15)."...</td>";
			$output .= "<td><a href=\"/nscc_gf_request/{$current_request->request_id}\">[view]</a></td>";
		}
		$output .= "</tr>\n";
	}
	$output .= "</table>\n";
	if(! $nopage){
		if($user->uid > 0){
			$output .= "<a href=\"nscc_gf_request/add\">Submit a New Request</a>\n";
		} else {
      // Fancy UI enhancements.
//			$output .= "Login (upper right) to make a request.\n";
			$output .= "<a href=\"/user/login\">Login</a> to make a request.\n";
			drupal_add_js(drupal_get_path('module','nscc_gf_request').'/gf-ui.js','theme');
		}
		$output .= "<p>All requests must comply with the gf submission guidelines.</p>\n";
	}
	
	if($nopage){
		print preg_replace('/gf_request/','gf_request_nopage',$output);
	} else {
		return $output;
	}
}


function _nscc_gf_request_view($request_id,$nopage=false){
	$sql = 'SELECT * FROM {nscc_gf_request} WHERE request_id=%d';
	$result = db_query(db_rewrite_sql($sql),$request_id);
	if($retrieved_request = db_fetch_object($result)){
			$output .='<div id="requestor"><b>Requested by:</b> '.$retrieved_request->requestor_name."</div>\n";
			$output .='<div id="request_title"><b>Title:</b> '.$retrieved_request->request_title."</div>\n";
			$output .='<div id="description"><b>Description:</b> '.$retrieved_request->description."</div>\n";
			$output .='<div id="project_url"><b>Department or Project Website:</b> '.$retrieved_request->project_url."</div>\n";

			$sql = 'SELECT r.requestor_uid,li.* FROM {nscc_gf_request_line_item} as li join {nscc_gf_request} as r using (request_id) WHERE li.request_id = %d ORDER BY li.changed ASC;';
			$line_item_result = db_query(db_rewrite_sql($sql),$request_id);
			$output .='<div id="financials"><b>Details:</b><br>'."\n";
			$output .= "<table>\n";
			$output .= "\t<tr>";
			$output .= "<td>line_item #</td>";
			$output .= "<td>Description</td>";
			$output .= "<td>Location</td>";
			$output .= "<td>Unit Price</td>";
			$output .= "<td>Quantity</td>";
			$output .= "<td>Total</td>";
			$output .= "</tr>\n";
			while($current_line_item = db_fetch_object($line_item_result)){
				$output .= "\t<tr>";
				$output .= "<td>{$current_line_item->line_item_id}</td>";
				$output .= "<td>{$current_line_item->description}</td>";
				$output .= "<td>{$current_line_item->location}</td>";
				$output .= "<td>$".$current_line_item->unit_price."</td>";
				$output .= "<td>{$current_line_item->quantity}</td>";
				$output .= "<td>$".$current_line_item->unit_price * $current_line_item->quantity."</td>";
				$output .= "</tr>\n";
			}
			$output .='<tr id="subtotal"><td colspan="4"></td><td>Subtotal:</td><td>$'._nscc_gf_request_total_line_items($request_id)."</td></tr>\n";
			$output .='<tr id="estimatedshipping"><td colspan="4"></td><td>Estimated Shipping:</td><td>$'.$retrieved_request->estimated_shipping."</td></tr>\n";
			$output .='<tr id="salestax"><td colspan="4"></td><td>Estimated Sales Tax:</td><td>$'.round((_nscc_gf_request_total_line_items($request_id) + $retrieved_request->estimated_shipping) * .09,2)."</td></tr>\n";
			$output .='<tr id="grandtotal"><td colspan="4"></td><td>Total Requested Funds:</td><td><b>$'.round((_nscc_gf_request_total_line_items($request_id) + $retrieved_request->estimated_shipping) * 1.09,2)."</b></td></tr>\n";
			$output .= "</table>\n</div>\n";
			$output .='<div><a href="/nscc_gf_request">Back</a> to the General Fund Request Listing</div>'."\n";
	} else {
		$output = 'Error';
	}
	if($nopage){
		print preg_replace('/gf_request/','gf_request_nopage',$output);
	} else {
		return $output;
	}

}


function nscc_gf_request_delete_form($questionable_garbage,$request_id){
	$form['request_id'] = array(
								'#type'=>'value',
								'#value'=>$request_id,
								);
	$form['submit'] = array(
								'#type'=>'submit',
								'#value'=>'Irrevocably Delete This General Fund Request ('.$request_id.')',
								'#description'=>'( This cannot be undone. )',
	);
	return $form;
}

function nscc_gf_request_delete_form_submit($form, &$form_state){
	$delete_line_items_sql='DELETE FROM {nscc_gf_request_line_item} WHERE request_id=%d';
	$delete_request_sql='DELETE FROM {nscc_gf_request} WHERE request_id=%d';
	if( db_query(db_rewrite_sql($delete_line_items_sql),$form_state['values']['request_id']) && db_query(db_rewrite_sql($delete_request_sql),$form_state['values']['request_id'])){
			$form_state['redirect'] = 'nscc_gf_request';
			drupal_set_message(t('gf Request # %request_id (and all related line items) Deleted.',array('%request_id'=>$form_state['values']['request_id'])));
	} else {
			drupal_set_message(t('There was a problem Deleting gf Request # %request_id (and all related line items).',array('%request_id'=>$form_state['values']['request_id'])));
	}	
}

function nscc_gf_request_baserequestform($questionable_garbage=null,$request_id=null){
	global $user;
	$requestor_user = user_load($user->uid);
	if($request_id){
		$sql = 'SELECT * FROM {nscc_gf_request} WHERE request_id=%d';
		$result = db_query(db_rewrite_sql($sql),$request_id);
		if($retrieved_request = db_fetch_object($result)){
			$default_requestor_name = $retrieved_request->requestor_name;
			$default_requestor_email = $retrieved_request->requestor_email;
			$default_requestor_phone = $retrieved_request->requestor_phone;
			$default_request_title = $retrieved_request->request_title;
			$default_description = $retrieved_request->description;
			$default_project_url = $retrieved_request->project_url;
			$default_estimated_shipping = $retrieved_request->estimated_shipping;
		}
		$submit_value = 'Update Request'; 
	} else {
		$default_requestor_name = $requestor_user->nscc_profile_first_name.' '.$requestor_user->nscc_profile_last_name;
		$default_requestor_email = $requestor_user->nscc_profile_email_address;
		$default_requestor_phone = $requestor_user->nscc_profile_phone;
		$default_intended_location = '';
		$default_description = '';
		$default_benefits = '';
		$default_estimated_shipping = 0.00;
		$submit_value = 'Add Line Items'; 
	}
	$form['request_id'] = array(
								'#type'=>'value',
								'#value'=>$request_id,
								);
	$form['requestor'] = array(
								'#title'=>t('Requestor Info'),
								'#type'=>'fieldset',
								'#collapsible'=> TRUE,									
								);
	$form['requestor']['requestor_name'] = array(
								'#title'=>t('Requestor Name'),
								'#type'=>'textfield',
								'#description'=>t('Enter your name.').$request_id,
								'#required'=>TRUE,
								'#maxlength'=>200,
								'#default_value'=>$default_requestor_name,
								);														
	$form['requestor']['requestor_email'] = array(
								'#title'=>t('Email Address'),
								'#type'=>'textfield',
								'#description'=>t('Enter the email address you wish the gf committee to contact you with if there are questions about your request.'),
								'#required'=>TRUE,
								'#maxlength'=>200,
								'#default_value'=>$default_requestor_email,
								);
	$form['requestor']['requestor_phone'] = array(
								'#title'=>t('Phone Number'),
								'#type'=>'textfield',
								'#description'=>t('Enter the local phone number you wish the gf committee to contact you with if there are questions about your request.'),
								'#maxlength'=>15,
								'#required'=>TRUE,
								'#default_value'=>$default_requestor_phone,
								);
	$form['request'] = array(
								'#title'=>t('Request Overview'),
								'#type'=>'fieldset',
								'#collapsible'=> TRUE,									
								);							
	$form['request']['request_title'] = array(
								'#title'=>t('Intended Location'),
								'#type'=>'textfield',
								'#size'=>60,
								'#description'=>t('Name of the program or project being funded'),
								'#required'=>TRUE,
								'#default_value'=>$default_request_title,
								);
	$form['request']['description'] = array(
								'#title'=>t('Description'),
								'#type'=>'textarea',
								'#description'=>t('Please describe the technology you are requesting.'),
								'#required'=>TRUE,
								'#default_value'=>$default_description,
								);
	$form['request']['project_url'] = array(
								'#title'=>t('Department or Project Website'),
								'#type'=>'textfield',
								'#size'=>60,
								'#description'=>t('Used in SFB literature'),
								'#required'=>FALSE,
								'#default_value'=>$default_project_url,
								);
	if(!$request_id){
		//save out the new request, move on to line items
		$form['submit'] = array(
								'#type'=>'submit',
								'#value'=>$submit_value,
							);															
	} else {
		$form['details'] = array(
									'#title'=>t('Request Details'),
									'#type'=>'fieldset',
									'#collapsible'=> TRUE,									
								);							

		$form['details']['line_items'] = array(
									'#prefix'=>'<div id="line_items">',
									'#value'=>_nscc_gf_request_list_line_items($request_id),
									'#suffix'=>'</div>',
								);
		$form['details']['subtotal'] = array(
									'#prefix'=>'<div id="subtotal">',
									'#value'=>'Subtotal: '._nscc_gf_request_total_line_items($request_id),
									'#suffix'=>'</div>',
									);
		$form['details']['estimated_shipping'] = array(
									'#title'=>t('Estimated Shipping Cost'),
									'#type'=>'textfield',
									'#field_prefix'=>'$',
									'#size'=>7,
									'#description'=>t('Put in your best guess as to the shipping cost of your complete request. It is better to err high.'),
									'#required'=>TRUE,
									'#default_value'=>$default_estimated_shipping,
									);
		$form['details']['salestax'] = array(
									'#prefix'=>'<div id="salestax">',
									'#value'=>'Estimated Sales Tax: '.round((_nscc_gf_request_total_line_items($request_id) + $default_estimated_shipping) * .09,2),
									'#suffix'=>'</div>',
									);
		$form['details']['grand_total'] = array(
									'#prefix'=>'<div id="grandtotal">',
									'#value'=>'Total Requested Funds: '.round((_nscc_gf_request_total_line_items($request_id) + $default_estimated_shipping) * 1.09,2),
									'#suffix'=>'</div>',
									);
		$form['submit'] = array(
								'#type'=>'submit',
								'#value'=>$submit_value,
							);								
	}
	return $form;
}

function nscc_gf_request_baserequestform_validate($form, &$form_state){
	if ($form_state['values']['estimated_shipping'] < 0){
		form_set_error('estimated_shipping','Estimated shipping must be a positive value');
	}
	if(!valid_email_address($form_state['values']['requestor_email'])){
		form_set_error('requestor_email','You must enter a valid email address.');
	}
}

function nscc_gf_request_baserequestform_submit($form, &$form_state){
		global $user;
		$gf_request = new stdClass();
		$gf_request->requestor_uid = $user->uid;
		$gf_request->requestor_name = $form_state['values']['requestor_name'];
		$gf_request->requestor_email = $form_state['values']['requestor_email'];
		$gf_request->requestor_phone = $form_state['values']['requestor_phone'];
		$gf_request->request_title = $form_state['values']['request_title'];
		$gf_request->description = $form_state['values']['description'];
		$gf_request->project_url = $form_state['values']['project_url'];
		if($form_state['values']['submit'] == 'Add Line Items'){
			$gf_request->created = time();
			$gf_request->changed = time();
			$gf_request->estimated_shipping = 0.00;
			drupal_write_record('nscc_gf_request',$gf_request);	
			$form_state['redirect'] = 'nscc_gf_request/'.$gf_request->request_id.'/edit_line_items';
					} else {
			if($form_state['values']['request_id']){
				$gf_request->estimated_shipping = $form_state['values']['estimated_shipping'];
				$gf_request->request_id = $form_state['values']['request_id'];
				$gf_request->changed = time();
				drupal_write_record('nscc_gf_request',$gf_request,'request_id');	
				$form_state['redirect'] = 'nscc_gf_request';
				drupal_set_message(t('gf request # %request_id Updated.',array('%request_id'=>$form_state['values']['request_id'])));
			}
		}
		
}


function _nscc_gf_request_list_line_items($request_id){
	global $user;
	$sql = 'SELECT r.requestor_uid,li.* FROM {nscc_gf_request_line_item} as li join {nscc_gf_request} as r using (request_id) WHERE li.request_id = %d ORDER BY li.changed ASC;';
	$result = db_query(db_rewrite_sql($sql),$request_id);
	$output = "<table>\n";
	$output .= "\t<tr>";
	$output .= "<td>line_item #</td>";
	$output .= "<td>Description</td>";
	$output .= "<td>Location</td>";
	$output .= "<td>Unit Price</td>";
	$output .= "<td>Quantity</td>";
	$output .= "<td>Total</td>";
	//$output .= "<td>Actions</td>";
	$output .= "</tr>\n";
	while($current_line_item = db_fetch_object($result)){
		$output .= "\t<tr>";
		$output .= "<td>{$current_line_item->line_item_id}</td>";
		$output .= "<td>{$current_line_item->description}</td>";
		$output .= "<td>{$current_line_item->location}</td>";
		$output .= "<td>$".$current_line_item->unit_price."</td>";
		$output .= "<td>{$current_line_item->quantity}</td>";
		$output .= "<td>$".$current_line_item->unit_price * $current_line_item->quantity."</td>";
		//if($user->uid == $current_line_item->requestor_uid || user_access('administer gf requests')){
		//	$output .="<td>";
		//	$output .="<a href=\"nscc_gf_request/$request_id/line_item/{$current_line_item->line_item_id}/edit\">[edit]</a> <a href=\"nscc_gf_request/$request_id/line_item/{$current_line_item->line_item_id}/delete\">[delete]</a>";
		//	$output .="</td>";
		//}
		$output .= "</tr>\n";
	}
	$output .= "</table>\n";
	$output .= "<a href=\"edit_line_items\">Edit Line Items</a>\n";
	return $output;
}

function _nscc_gf_request_total_line_items($request_id){
	$sql = 'SELECT sum(li.unit_price * li.quantity) as total FROM {nscc_gf_request_line_item} as li WHERE li.request_id = %d;';
	return db_result(db_query(db_rewrite_sql($sql),$request_id));
}

function nscc_gf_request_edit_line_itemsform($questionable_garbage,$request_id,$line_item_id = null){
//displays line items, with links for edit and delete to existing items, and add form for new items
	global $user;
	$sql = 'SELECT r.requestor_uid,li.* FROM {nscc_gf_request_line_item} as li join {nscc_gf_request} as r using (request_id) WHERE li.request_id = %d ORDER BY li.changed ASC;';
	$result = db_query(db_rewrite_sql($sql),$request_id);
	$output = "<table>\n";
	$output .= "\t<tr>";
	$output .= "<td>line_item #</td>";
	$output .= "<td>Description</td>";
	$output .= "<td>Location</td>";
	$output .= "<td>Unit Price</td>";
	$output .= "<td>Quantity</td>";
	$output .= "<td>Total</td>";
	$output .= "<td>Actions</td>";
	$output .= "</tr>\n";
	while($current_line_item = db_fetch_object($result)){
		if($current_line_item->line_item_id != $line_item_id){
			$output .= "\t<tr>";
			$output .= "<td>{$current_line_item->line_item_id}</td>";
			$output .= "<td>{$current_line_item->description}</td>";
			$output .= "<td>{$current_line_item->location}</td>";
			$output .= "<td>$".$current_line_item->unit_price."</td>";
			$output .= "<td>{$current_line_item->quantity}</td>";
			$output .= "<td>$".$current_line_item->unit_price * $current_line_item->quantity."</td>";
			if($user->uid == $current_line_item->requestor_uid || user_access('administer gf requests')){
				$output .="<td>";
				$output .="<a href=\"/nscc_gf_request/$request_id/line_item/{$current_line_item->line_item_id}/edit\">[edit]</a> <a href=\"/nscc_gf_request/$request_id/line_item/{$current_line_item->line_item_id}/delete\">[delete]</a>";
				$output .="</td>";
			}
			$output .= "</tr>\n";
		}
	}
	$output .= "</table>\n<p>";


	$form['request_id'] = array(
								'#type'=>'value',
								'#value'=>$request_id,
								);
	$form['line_items'] = array(
							'#prefix'=>'<div id="line_items">',
							'#value'=>$output,
							'#suffix'=>'</div>',
						);

	if(!$line_item_id){
		$form['new_line_item'] = array(
								'#title'=>t('Add Line Item'),
								'#type'=>'fieldset',
								);
		$form['new_line_item']['description'] = array(
														'#title'=>t('Item Description'),
														'#type'=>'textfield',
														'#description'=>t('Enter a brief description of the item'),
														'#maxlength'=>200,
														'#size'=>50,
														'#required'=>TRUE,
														'#default_value'=>'',
												);							
		$form['new_line_item']['location'] = array(
														'#title'=>t('Location'),
														'#type'=>'textfield',
														'#description'=>t('Enter the intended location of this item'),
														'#maxlength'=>200,
														'#size'=>50,
														'#required'=>FALSE,
														'#default_value'=>'',
												);							
		$form['new_line_item']['unit_price'] = array(
														'#title'=>t('Unit Cost'),
														'#type'=>'textfield',
														'#field_prefix'=>'$',
														'#size'=>7,
														'#description'=>t('The price of one of these items'),
														'#required'=>TRUE,
														'#default_value'=>'',
												);							
		$form['new_line_item']['quantity'] = array(
														'#title'=>t('Quantity'),
														'#type'=>'textfield',
														'#size'=>7,
														'#description'=>t('The number of these items requested'),
														'#required'=>TRUE,
														'#default_value'=>'',
												);							
		$form['new_line_item']['submit_add'] = array(
														'#type'=>'submit',
														'#value'=>'Add This Line Item',
												);							
	} else {
		$sql = 'SELECT li.* FROM {nscc_gf_request_line_item} as li  WHERE li.line_item_id=%d;';
		$current_line_item = db_fetch_object(db_query(db_rewrite_sql($sql),$line_item_id));
		$form['new_line_item'] = array(
								'#title'=>t('Edit Line Item'),
								'#type'=>'fieldset',
								);
		$form['new_line_item']['line_item_id'] = array(
								'#type'=>'value',
								'#value'=>$line_item_id,
								);
								
		$form['new_line_item']['description'] = array(
														'#title'=>t('Item Description'),
														'#type'=>'textfield',
														'#description'=>t('Enter a brief description of the item'),
														'#maxlength'=>200,
														'#size'=>50,
														'#required'=>TRUE,
														'#default_value'=>$current_line_item->description,
												);							
		$form['new_line_item']['location'] = array(
														'#title'=>t('Location'),
														'#type'=>'textfield',
														'#description'=>t('Enter the intended location of this item'),
														'#maxlength'=>200,
														'#size'=>50,
														'#required'=>FALSE,
														'#default_value'=>$current_line_item->location,
												);							
		$form['new_line_item']['unit_price'] = array(
														'#title'=>t('Unit Cost'),
														'#type'=>'textfield',
														'#field_prefix'=>'$',
														'#size'=>7,
														'#description'=>t('The price of one of these items'),
														'#required'=>TRUE,
														'#default_value'=>$current_line_item->unit_price,
												);							
		$form['new_line_item']['quantity'] = array(
														'#title'=>t('Quantity'),
														'#type'=>'textfield',
														'#size'=>7,
														'#description'=>t('The number of these items requested'),
														'#required'=>TRUE,
														'#default_value'=>$current_line_item->quantity,
												);							
		$form['new_line_item']['submit_update'] = array(
														'#type'=>'submit',
														'#value'=>'Update This Line Item',
												);							
	}
	$form['done'] = array(
							'#prefix'=>'<div>',
							'#value'=>'<a href="/nscc_gf_request/'.$request_id.'/edit">DONE Editing Line Items</a>',
							'#suffix'=>'</div>'
						);							
	return $form;
}

function nscc_gf_request_edit_line_itemsform_validate($form, &$form_state){
	return true;
}

function nscc_gf_request_edit_line_itemsform_submit($form, &$form_state){
		$line_item = new stdClass();
		$line_item->description = $form_state['values']['description'];
		$line_item->location = $form_state['values']['location'];
		$line_item->unit_price = $form_state['values']['unit_price'];
		$line_item->quantity = $form_state['values']['quantity'];
		$line_item->weight = 0;
		$line_item->request_id = $form_state['values']['request_id'];
		if(!$form_state['values']['line_item_id']){
			$line_item->weight = 0;
			$line_item->created = time();
			$line_item->changed = time();
			drupal_write_record('nscc_gf_request_line_item',$line_item);	
			drupal_set_message(t('Line Item Added.'));
			$form_state['redirect'] = '/nscc_gf_request/'.$form_state['values']['request_id'].'/edit_line_items';
		} else {
			if($form_state['values']['submit_update']){
				$line_item->line_item_id = $form_state['values']['line_item_id'];
				$line_item->changed = time();
				drupal_set_message(t('Line Item Updated.'));
				drupal_write_record('nscc_gf_request_line_item',$line_item,'line_item_id');	
				$form_state['redirect'] = '/nscc_gf_request/'.$form_state['values']['request_id'].'/edit_line_items';
			} else {
				drupal_set_message(t('Done Updating Line Items.'));
				$form_state['redirect'] = '/nscc_gf_request/'.$form_state['values']['request_id'].'/edit';				
			}
		}
}


function nscc_gf_request_delete_line_itemform($questionable_garbage,$request_id,$line_item_id){
	$form['request_id'] = array(
								'#type'=>'value',
								'#value'=>$request_id,
								);
	$form['line_item_id'] = array(
								'#type'=>'value',
								'#value'=>$line_item_id,
								);
	$form['submit'] = array(
								'#type'=>'submit',
								'#value'=>'Irrevocably Delete This Line Item ('.$line_item_id.')',
								'#description'=>'( This cannot be undone. )',
	);
	return $form;
}

function nscc_gf_request_delete_line_itemform_validate($form, &$form_state){
	return true;
}

function nscc_gf_request_delete_line_itemform_submit($form, &$form_state){
	$delete_line_item_sql='DELETE FROM {nscc_gf_request_line_item} WHERE line_item_id=%d';
	if( db_query(db_rewrite_sql($delete_line_item_sql),$form_state['values']['line_item_id']) ){
			$form_state['redirect'] = '/nscc_gf_request/'.$form_state['values']['request_id'].'/edit_line_items';
			drupal_set_message(t('Line Item Deleted'));
	} else {
			drupal_set_message(t('There was a problem Deleting Line Item # %line_item_id.',array('%line_item_id'=>$form_state['values']['line_item_id'])));
	}	
}

